{
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/env.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/env.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation = /*#__PURE__*/function () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning = /*#__PURE__*/function () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBWjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sV0FBSUosR0FBSixvQkFBMUI7O0FBRUEsSUFBTVEsSUFBSSxHQUFHSCxJQUFJLENBQUNHLElBQWxCO0FBRUEsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNSLEdBQUQsRUFBTSxjQUFOLENBQTFCO0FBQ0EsSUFBTVUsZ0JBQWdCLEdBQUdGLElBQUksQ0FBQ1IsR0FBRCxFQUFNLGVBQU4sQ0FBN0I7QUFDQSxJQUFNVyxZQUFZLEdBQUdILElBQUksQ0FBQ1IsR0FBRCxFQUFNLHNCQUFOLENBQXpCOztJQUVNWSxXO0FBQ0oseUJBQWM7QUFBQTs7QUFBQTs7QUFBQSw4Q0FhSztBQUFBLGFBQU0sS0FBSSxDQUFDQyxTQUFMLENBQWVDLE1BQWYsQ0FBc0IsVUFBQUMsSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ0MsT0FBVDtBQUFBLE9BQTFCLENBQU47QUFBQSxLQWJMOztBQUNaLFNBQUtBLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS0gsU0FBTCxHQUFpQixDQUNmO0FBQ0VHLE1BQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLE1BQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLE1BQUFBLEdBQUcsRUFBRTtBQUhQLEtBRGUsQ0FBakI7QUFRQSxTQUFLQyxJQUFMO0FBQ0Q7Ozs7MkJBSU07QUFDTCxVQUFJaEIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjWCxhQUFkLENBQUosRUFBa0M7QUFDaEMsYUFBS08sT0FBTCxHQUFlLElBQWY7QUFDQSxhQUFLSCxTQUFMLEdBQWlCVCxPQUFPLENBQUNLLGFBQUQsQ0FBeEI7QUFDRDtBQUNGOzs7Ozs7SUFHR1ksVTtBQUNKLHdCQUFjO0FBQUE7O0FBQ1osU0FBS0wsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLTSxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixJQUF0QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxTQUFLQyxtQkFBTCxHQUEyQixLQUEzQjtBQUVBLFNBQUtOLElBQUw7QUFDRDs7OztvREFFK0I7QUFDOUJPLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNFLFVBQUdyQixLQUFLLENBQUNzQixNQUFOLENBQWEsNEJBQWIsQ0FBSCwySUFERjtBQUtEOzs7MkJBRU07QUFDTCxVQUFJekIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjVixnQkFBZCxDQUFKLEVBQXFDO0FBQ25DLGFBQUtNLE9BQUwsR0FBZSxJQUFmO0FBQ0EsYUFBS1EsUUFBTCxHQUFnQkssSUFBSSxDQUFDQyxLQUFMLENBQVczQixFQUFFLENBQUM0QixZQUFILENBQWdCckIsZ0JBQWhCLEVBQWtDLE1BQWxDLENBQVgsQ0FBaEI7QUFDQSxhQUFLWSxhQUFMLEdBQXFCLEtBQUtFLFFBQUwsQ0FBYyxDQUFkLENBQXJCO0FBQ0EsYUFBS0QsY0FBTCxHQUFzQmhCLFVBQVUsQ0FBQ3lCLG1CQUFYLEdBQ2xCekIsVUFBVSxDQUFDeUIsbUJBRE8sR0FFbEIsS0FBS1YsYUFGVCxDQUptQyxDQU1YO0FBQ3pCOztBQUVELFVBQUksQ0FBQ25CLEVBQUUsQ0FBQ2lCLFVBQUgsQ0FBY1QsWUFBZCxDQUFMLEVBQWtDO0FBQ2hDLGFBQUtjLG1CQUFMLEdBQTJCLElBQTNCO0FBQ0Q7QUFDRjs7Ozs7O0FBR0gsSUFBTVEsR0FBRyxHQUFHO0FBQ1ZDLEVBQUFBLFdBQVcsRUFBRSxJQUFJdEIsV0FBSixFQURIO0FBRVZ1QixFQUFBQSxVQUFVLEVBQUUsSUFBSWQsVUFBSjtBQUZGLENBQVo7QUFLQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixHQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9wZGNhbWFyZ28vd29ya3NwYWNlL2RyZWFtcGFjdC9kb2N1c2F1cnVzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xuXG5jb25zdCBzaXRlQ29uZmlnID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcblxuY29uc3Qgam9pbiA9IHBhdGguam9pbjtcblxuY29uc3QgbGFuZ3VhZ2VzRmlsZSA9IGpvaW4oQ1dELCAnbGFuZ3VhZ2VzLmpzJyk7XG5jb25zdCB2ZXJzaW9uc0pTT05GaWxlID0gam9pbihDV0QsICd2ZXJzaW9ucy5qc29uJyk7XG5jb25zdCB2ZXJzaW9uc0ZpbGUgPSBqb2luKENXRCwgJ3BhZ2VzL2VuL3ZlcnNpb25zLmpzJyk7XG5cbmNsYXNzIFRyYW5zbGF0aW9uIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYW5ndWFnZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgIG5hbWU6ICdFbmdsaXNoJyxcbiAgICAgICAgdGFnOiAnZW4nLFxuICAgICAgfSxcbiAgICBdO1xuXG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBlbmFibGVkTGFuZ3VhZ2VzID0gKCkgPT4gdGhpcy5sYW5ndWFnZXMuZmlsdGVyKGxhbmcgPT4gbGFuZy5lbmFibGVkKTtcblxuICBsb2FkKCkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKGxhbmd1YWdlc0ZpbGUpKSB7XG4gICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy5sYW5ndWFnZXMgPSByZXF1aXJlKGxhbmd1YWdlc0ZpbGUpO1xuICAgIH1cbiAgfVxufVxuXG5jbGFzcyBWZXJzaW9uaW5nIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5sYXRlc3RWZXJzaW9uID0gbnVsbDtcbiAgICB0aGlzLmRlZmF1bHRWZXJzaW9uID0gbnVsbDtcbiAgICB0aGlzLnZlcnNpb25zID0gW107XG4gICAgdGhpcy5taXNzaW5nVmVyc2lvbnNQYWdlID0gZmFsc2U7XG5cbiAgICB0aGlzLmxvYWQoKTtcbiAgfVxuXG4gIHByaW50TWlzc2luZ1ZlcnNpb25zUGFnZUVycm9yKCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICBgJHtjaGFsay55ZWxsb3coJ05vIHZlcnNpb25zLmpzIGZpbGUgZm91bmQhJyl9YCArXG4gICAgICAgIGBcXG5Zb3Ugc2hvdWxkIGNyZWF0ZSB5b3VyIHZlcnNpb25zLmpzIGZpbGUgaW4gcGFnZXMvZW4gZGlyZWN0b3J5LmAgK1xuICAgICAgICBgXFxuUGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZG9jdXNhdXJ1cy5pby9kb2NzL2VuL3ZlcnNpb25pbmcuaHRtbC5gLFxuICAgICk7XG4gIH1cblxuICBsb2FkKCkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKHZlcnNpb25zSlNPTkZpbGUpKSB7XG4gICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy52ZXJzaW9ucyA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKHZlcnNpb25zSlNPTkZpbGUsICd1dGY4JykpO1xuICAgICAgdGhpcy5sYXRlc3RWZXJzaW9uID0gdGhpcy52ZXJzaW9uc1swXTtcbiAgICAgIHRoaXMuZGVmYXVsdFZlcnNpb24gPSBzaXRlQ29uZmlnLmRlZmF1bHRWZXJzaW9uU2hvd25cbiAgICAgICAgPyBzaXRlQ29uZmlnLmRlZmF1bHRWZXJzaW9uU2hvd25cbiAgICAgICAgOiB0aGlzLmxhdGVzdFZlcnNpb247IC8vIG90aGVyd2lzZSBzaG93IHRoZSBsYXRlc3QgdmVyc2lvbiAob3RoZXIgdGhhbiBuZXh0L21hc3RlcilcbiAgICB9XG5cbiAgICBpZiAoIWZzLmV4aXN0c1N5bmModmVyc2lvbnNGaWxlKSkge1xuICAgICAgdGhpcy5taXNzaW5nVmVyc2lvbnNQYWdlID0gdHJ1ZTtcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgZW52ID0ge1xuICB0cmFuc2xhdGlvbjogbmV3IFRyYW5zbGF0aW9uKCksXG4gIHZlcnNpb25pbmc6IG5ldyBWZXJzaW9uaW5nKCksXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVudjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;;;AAOA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,OAAT;AAAA,OAA1B,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter(lang => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/start.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/start.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/start.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/start.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "start.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar program = require('commander');\n\nvar openBrowser = require('react-dev-utils/openBrowser');\n\nvar portFinder = require('portfinder');\n\nvar liveReloadServer = require('./liveReloadServer.js');\n\nvar server = require('./server.js');\n\nvar CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  var promise = portFinder.getPortPromise({\n    port: 35729\n  }).then(function (port) {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  var initialServerPort = parseInt(program.port, 10) || process.env.PORT || 3000;\n  var host = program.host || 'localhost';\n  var promise = portFinder.getPortPromise({\n    port: initialServerPort\n  }).then(function (port) {\n    server(port, host);\n\n    var _require = require(\"\".concat(CWD, \"/siteConfig.js\")),\n        baseUrl = _require.baseUrl;\n\n    var serverAddress = \"http://\".concat(host, \":\").concat(port).concat(baseUrl);\n    console.log('Docusaurus server started on port %d', port);\n    openBrowser(serverAddress);\n  });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer().catch(function (ex) {\n      return console.warn(\"Failed to start live reload server: \".concat(ex));\n    }).then(function () {\n      return startServer();\n    });\n  }\n\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus: startDocusaurus,\n  startServer: startServer,\n  startLiveReloadServer: startLiveReloadServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXJ0LmpzIl0sIm5hbWVzIjpbInByb2dyYW0iLCJyZXF1aXJlIiwib3BlbkJyb3dzZXIiLCJwb3J0RmluZGVyIiwibGl2ZVJlbG9hZFNlcnZlciIsInNlcnZlciIsIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJzdGFydExpdmVSZWxvYWRTZXJ2ZXIiLCJwcm9taXNlIiwiZ2V0UG9ydFByb21pc2UiLCJwb3J0IiwidGhlbiIsInN0YXJ0Iiwic3RhcnRTZXJ2ZXIiLCJpbml0aWFsU2VydmVyUG9ydCIsInBhcnNlSW50IiwiZW52IiwiUE9SVCIsImhvc3QiLCJiYXNlVXJsIiwic2VydmVyQWRkcmVzcyIsImNvbnNvbGUiLCJsb2ciLCJzdGFydERvY3VzYXVydXMiLCJ3YXRjaCIsImNhdGNoIiwiZXgiLCJ3YXJuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0EsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBQyw2QkFBRCxDQUEzQjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQTFCOztBQUNBLElBQU1HLGdCQUFnQixHQUFHSCxPQUFPLENBQUMsdUJBQUQsQ0FBaEM7O0FBQ0EsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsYUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUVBLFNBQVNDLHFCQUFULEdBQWlDO0FBQy9CLE1BQU1DLE9BQU8sR0FBR1AsVUFBVSxDQUFDUSxjQUFYLENBQTBCO0FBQUNDLElBQUFBLElBQUksRUFBRTtBQUFQLEdBQTFCLEVBQXlDQyxJQUF6QyxDQUE4QyxVQUFBRCxJQUFJLEVBQUk7QUFDcEVSLElBQUFBLGdCQUFnQixDQUFDVSxLQUFqQixDQUF1QkYsSUFBdkI7QUFDRCxHQUZlLENBQWhCO0FBR0EsU0FBT0YsT0FBUDtBQUNEOztBQUVELFNBQVNLLFdBQVQsR0FBdUI7QUFDckIsTUFBTUMsaUJBQWlCLEdBQ3JCQyxRQUFRLENBQUNqQixPQUFPLENBQUNZLElBQVQsRUFBZSxFQUFmLENBQVIsSUFBOEJMLE9BQU8sQ0FBQ1csR0FBUixDQUFZQyxJQUExQyxJQUFrRCxJQURwRDtBQUVBLE1BQU1DLElBQUksR0FBR3BCLE9BQU8sQ0FBQ29CLElBQVIsSUFBZ0IsV0FBN0I7QUFDQSxNQUFNVixPQUFPLEdBQUdQLFVBQVUsQ0FDdkJRLGNBRGEsQ0FDRTtBQUFDQyxJQUFBQSxJQUFJLEVBQUVJO0FBQVAsR0FERixFQUViSCxJQUZhLENBRVIsVUFBQUQsSUFBSSxFQUFJO0FBQ1pQLElBQUFBLE1BQU0sQ0FBQ08sSUFBRCxFQUFPUSxJQUFQLENBQU47O0FBRFksbUJBRU1uQixPQUFPLFdBQUlLLEdBQUosb0JBRmI7QUFBQSxRQUVMZSxPQUZLLFlBRUxBLE9BRks7O0FBR1osUUFBTUMsYUFBYSxvQkFBYUYsSUFBYixjQUFxQlIsSUFBckIsU0FBNEJTLE9BQTVCLENBQW5CO0FBQ0FFLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EWixJQUFwRDtBQUNBVixJQUFBQSxXQUFXLENBQUNvQixhQUFELENBQVg7QUFDRCxHQVJhLENBQWhCO0FBU0EsU0FBT1osT0FBUDtBQUNEOztBQUVELFNBQVNlLGVBQVQsR0FBMkI7QUFDekIsTUFBSXpCLE9BQU8sQ0FBQzBCLEtBQVosRUFBbUI7QUFDakIsV0FBT2pCLHFCQUFxQixHQUN6QmtCLEtBREksQ0FDRSxVQUFBQyxFQUFFO0FBQUEsYUFBSUwsT0FBTyxDQUFDTSxJQUFSLCtDQUFvREQsRUFBcEQsRUFBSjtBQUFBLEtBREosRUFFSmYsSUFGSSxDQUVDO0FBQUEsYUFBTUUsV0FBVyxFQUFqQjtBQUFBLEtBRkQsQ0FBUDtBQUdEOztBQUNELFNBQU9BLFdBQVcsRUFBbEI7QUFDRDs7QUFFRGUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZOLEVBQUFBLGVBQWUsRUFBZkEsZUFEZTtBQUVmVixFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZk4sRUFBQUEscUJBQXFCLEVBQXJCQTtBQUhlLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3BkY2FtYXJnby93b3Jrc3BhY2UvZHJlYW1wYWN0L2RvY3VzYXVydXMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3Qgb3BlbkJyb3dzZXIgPSByZXF1aXJlKCdyZWFjdC1kZXYtdXRpbHMvb3BlbkJyb3dzZXInKTtcbmNvbnN0IHBvcnRGaW5kZXIgPSByZXF1aXJlKCdwb3J0ZmluZGVyJyk7XG5jb25zdCBsaXZlUmVsb2FkU2VydmVyID0gcmVxdWlyZSgnLi9saXZlUmVsb2FkU2VydmVyLmpzJyk7XG5jb25zdCBzZXJ2ZXIgPSByZXF1aXJlKCcuL3NlcnZlci5qcycpO1xuXG5jb25zdCBDV0QgPSBwcm9jZXNzLmN3ZCgpO1xuXG5mdW5jdGlvbiBzdGFydExpdmVSZWxvYWRTZXJ2ZXIoKSB7XG4gIGNvbnN0IHByb21pc2UgPSBwb3J0RmluZGVyLmdldFBvcnRQcm9taXNlKHtwb3J0OiAzNTcyOX0pLnRoZW4ocG9ydCA9PiB7XG4gICAgbGl2ZVJlbG9hZFNlcnZlci5zdGFydChwb3J0KTtcbiAgfSk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlcnZlcigpIHtcbiAgY29uc3QgaW5pdGlhbFNlcnZlclBvcnQgPVxuICAgIHBhcnNlSW50KHByb2dyYW0ucG9ydCwgMTApIHx8IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMDtcbiAgY29uc3QgaG9zdCA9IHByb2dyYW0uaG9zdCB8fCAnbG9jYWxob3N0JztcbiAgY29uc3QgcHJvbWlzZSA9IHBvcnRGaW5kZXJcbiAgICAuZ2V0UG9ydFByb21pc2Uoe3BvcnQ6IGluaXRpYWxTZXJ2ZXJQb3J0fSlcbiAgICAudGhlbihwb3J0ID0+IHtcbiAgICAgIHNlcnZlcihwb3J0LCBob3N0KTtcbiAgICAgIGNvbnN0IHtiYXNlVXJsfSA9IHJlcXVpcmUoYCR7Q1dEfS9zaXRlQ29uZmlnLmpzYCk7XG4gICAgICBjb25zdCBzZXJ2ZXJBZGRyZXNzID0gYGh0dHA6Ly8ke2hvc3R9OiR7cG9ydH0ke2Jhc2VVcmx9YDtcbiAgICAgIGNvbnNvbGUubG9nKCdEb2N1c2F1cnVzIHNlcnZlciBzdGFydGVkIG9uIHBvcnQgJWQnLCBwb3J0KTtcbiAgICAgIG9wZW5Ccm93c2VyKHNlcnZlckFkZHJlc3MpO1xuICAgIH0pO1xuICByZXR1cm4gcHJvbWlzZTtcbn1cblxuZnVuY3Rpb24gc3RhcnREb2N1c2F1cnVzKCkge1xuICBpZiAocHJvZ3JhbS53YXRjaCkge1xuICAgIHJldHVybiBzdGFydExpdmVSZWxvYWRTZXJ2ZXIoKVxuICAgICAgLmNhdGNoKGV4ID0+IGNvbnNvbGUud2FybihgRmFpbGVkIHRvIHN0YXJ0IGxpdmUgcmVsb2FkIHNlcnZlcjogJHtleH1gKSlcbiAgICAgIC50aGVuKCgpID0+IHN0YXJ0U2VydmVyKCkpO1xuICB9XG4gIHJldHVybiBzdGFydFNlcnZlcigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3RhcnREb2N1c2F1cnVzLFxuICBzdGFydFNlcnZlcixcbiAgc3RhcnRMaXZlUmVsb2FkU2VydmVyLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "start.js"
      ],
      "names": [
        "program",
        "require",
        "openBrowser",
        "portFinder",
        "liveReloadServer",
        "server",
        "CWD",
        "process",
        "cwd",
        "startLiveReloadServer",
        "promise",
        "getPortPromise",
        "port",
        "then",
        "start",
        "startServer",
        "initialServerPort",
        "parseInt",
        "env",
        "PORT",
        "host",
        "baseUrl",
        "serverAddress",
        "console",
        "log",
        "startDocusaurus",
        "watch",
        "catch",
        "ex",
        "warn",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,uBAAD,CAAhC;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAMK,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,SAASC,qBAAT,GAAiC;AAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACQ,cAAX,CAA0B;AAACC,IAAAA,IAAI,EAAE;AAAP,GAA1B,EAAyCC,IAAzC,CAA8C,UAAAD,IAAI,EAAI;AACpER,IAAAA,gBAAgB,CAACU,KAAjB,CAAuBF,IAAvB;AACD,GAFe,CAAhB;AAGA,SAAOF,OAAP;AACD;;AAED,SAASK,WAAT,GAAuB;AACrB,MAAMC,iBAAiB,GACrBC,QAAQ,CAACjB,OAAO,CAACY,IAAT,EAAe,EAAf,CAAR,IAA8BL,OAAO,CAACW,GAAR,CAAYC,IAA1C,IAAkD,IADpD;AAEA,MAAMC,IAAI,GAAGpB,OAAO,CAACoB,IAAR,IAAgB,WAA7B;AACA,MAAMV,OAAO,GAAGP,UAAU,CACvBQ,cADa,CACE;AAACC,IAAAA,IAAI,EAAEI;AAAP,GADF,EAEbH,IAFa,CAER,UAAAD,IAAI,EAAI;AACZP,IAAAA,MAAM,CAACO,IAAD,EAAOQ,IAAP,CAAN;;AADY,mBAEMnB,OAAO,WAAIK,GAAJ,oBAFb;AAAA,QAELe,OAFK,YAELA,OAFK;;AAGZ,QAAMC,aAAa,oBAAaF,IAAb,cAAqBR,IAArB,SAA4BS,OAA5B,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDZ,IAApD;AACAV,IAAAA,WAAW,CAACoB,aAAD,CAAX;AACD,GARa,CAAhB;AASA,SAAOZ,OAAP;AACD;;AAED,SAASe,eAAT,GAA2B;AACzB,MAAIzB,OAAO,CAAC0B,KAAZ,EAAmB;AACjB,WAAOjB,qBAAqB,GACzBkB,KADI,CACE,UAAAC,EAAE;AAAA,aAAIL,OAAO,CAACM,IAAR,+CAAoDD,EAApD,EAAJ;AAAA,KADJ,EAEJf,IAFI,CAEC;AAAA,aAAME,WAAW,EAAjB;AAAA,KAFD,CAAP;AAGD;;AACD,SAAOA,WAAW,EAAlB;AACD;;AAEDe,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,eAAe,EAAfA,eADe;AAEfV,EAAAA,WAAW,EAAXA,WAFe;AAGfN,EAAAA,qBAAqB,EAArBA;AAHe,CAAjB",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst program = require('commander');\nconst openBrowser = require('react-dev-utils/openBrowser');\nconst portFinder = require('portfinder');\nconst liveReloadServer = require('./liveReloadServer.js');\nconst server = require('./server.js');\n\nconst CWD = process.cwd();\n\nfunction startLiveReloadServer() {\n  const promise = portFinder.getPortPromise({port: 35729}).then(port => {\n    liveReloadServer.start(port);\n  });\n  return promise;\n}\n\nfunction startServer() {\n  const initialServerPort =\n    parseInt(program.port, 10) || process.env.PORT || 3000;\n  const host = program.host || 'localhost';\n  const promise = portFinder\n    .getPortPromise({port: initialServerPort})\n    .then(port => {\n      server(port, host);\n      const {baseUrl} = require(`${CWD}/siteConfig.js`);\n      const serverAddress = `http://${host}:${port}${baseUrl}`;\n      console.log('Docusaurus server started on port %d', port);\n      openBrowser(serverAddress);\n    });\n  return promise;\n}\n\nfunction startDocusaurus() {\n  if (program.watch) {\n    return startLiveReloadServer()\n      .catch(ex => console.warn(`Failed to start live reload server: ${ex}`))\n      .then(() => startServer());\n  }\n  return startServer();\n}\n\nmodule.exports = {\n  startDocusaurus,\n  startServer,\n  startLiveReloadServer,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/liveReloadServer.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar program = require('commander');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  var host = program.host || 'localhost';\n  return \"http://\".concat(host, \":\").concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJwcm9ncmFtIiwicmVhZE1ldGFkYXRhIiwic3RhcnQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTElWRVJFTE9BRF9QT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImdldERvY3NQYXRoIiwib24iLCJub3RpZnlDbGllbnRzIiwiZ2V0UmVsb2FkU2NyaXB0VXJsIiwiaG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1HLFlBQVksR0FBR0gsT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLFNBQVNJLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosR0FBdUIsYUFBdkI7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGVBQVosR0FBOEJKLElBQTlCO0FBQ0EsTUFBTUssTUFBTSxHQUFHVCxNQUFNLEVBQXJCO0FBQ0FTLEVBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTixJQUFkLEVBQW9CLFlBQU07QUFDeEJPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNDQUFaLEVBQW9EUixJQUFwRDtBQUNELEdBRkQ7QUFJQU4sRUFBQUEsSUFBSSxDQUNGLGNBQU9JLFlBQVksQ0FBQ1csV0FBYixFQUFQLFlBQTBDLE1BQTFDLEVBQWtELG9CQUFsRCxDQURFLEVBRUYsWUFBVztBQUNULFNBQUtDLEVBQUwsQ0FBUSxLQUFSLEVBQWUsWUFBTTtBQUNuQkwsTUFBQUEsTUFBTSxDQUFDTSxhQUFQLENBQXFCLENBQUMsR0FBRCxDQUFyQjtBQUNELEtBRkQ7QUFHRCxHQU5DLENBQUo7QUFRRDs7QUFDRCxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLEdBQU07QUFDL0IsTUFBTVosSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBekI7QUFDQSxNQUFNUyxJQUFJLEdBQUdoQixPQUFPLENBQUNnQixJQUFSLElBQWdCLFdBQTdCO0FBRUEsMEJBQWlCQSxJQUFqQixjQUF5QmIsSUFBekI7QUFDRCxDQUxEOztBQU9BYyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmhCLEVBQUFBLEtBQUssRUFBTEEsS0FEZTtBQUVmYSxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGRjYW1hcmdvL3dvcmtzcGFjZS9kcmVhbXBhY3QvZG9jdXNhdXJ1cy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBnYXplID0gcmVxdWlyZSgnZ2F6ZScpO1xuY29uc3QgdGlueWxyID0gcmVxdWlyZSgndGlueS1scicpO1xuY29uc3QgcHJvZ3JhbSA9IHJlcXVpcmUoJ2NvbW1hbmRlcicpO1xuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9yZWFkTWV0YWRhdGEuanMnKTtcblxuZnVuY3Rpb24gc3RhcnQocG9ydCkge1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9ICdkZXZlbG9wbWVudCc7XG4gIHByb2Nlc3MuZW52LkxJVkVSRUxPQURfUE9SVCA9IHBvcnQ7XG4gIGNvbnN0IHNlcnZlciA9IHRpbnlscigpO1xuICBzZXJ2ZXIubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnTGl2ZVJlbG9hZCBzZXJ2ZXIgc3RhcnRlZCBvbiBwb3J0ICVkJywgcG9ydCk7XG4gIH0pO1xuXG4gIGdhemUoXG4gICAgW2AuLi8ke3JlYWRNZXRhZGF0YS5nZXREb2NzUGF0aCgpfS8qKi8qYCwgJyoqLyonLCAnIW5vZGVfbW9kdWxlcy8qKi8qJ10sXG4gICAgZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLm9uKCdhbGwnLCAoKSA9PiB7XG4gICAgICAgIHNlcnZlci5ub3RpZnlDbGllbnRzKFsnLyddKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICk7XG59XG5jb25zdCBnZXRSZWxvYWRTY3JpcHRVcmwgPSAoKSA9PiB7XG4gIGNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5MSVZFUkVMT0FEX1BPUlQ7XG4gIGNvbnN0IGhvc3QgPSBwcm9ncmFtLmhvc3QgfHwgJ2xvY2FsaG9zdCc7XG5cbiAgcmV0dXJuIGBodHRwOi8vJHtob3N0fToke3BvcnR9L2xpdmVyZWxvYWQuanNgO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0LFxuICBnZXRSZWxvYWRTY3JpcHRVcmwsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "program",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "host",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASI,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB;AACAS,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAN,EAAAA,IAAI,CACF,cAAOI,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAW;AACT,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,MAAMS,IAAI,GAAGhB,OAAO,CAACgB,IAAR,IAAgB,WAA7B;AAEA,0BAAiBA,IAAjB,cAAyBb,IAAzB;AACD,CALD;;AAOAc,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst program = require('commander');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function() {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  const host = program.host || 'localhost';\n\n  return `http://${host}:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/readMetadata.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/readMetadata.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url', 'description']);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : siteConfig;\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file, config); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "SupportedHeaderFields",
        "Set",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "Object",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "forEach",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "id",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "parse",
        "name",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "basename",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "extname",
        "res",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "config",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n  'description',\n]);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach(sidebar => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach(category => {\n      const categoryItems = categories[category];\n      categoryItems.forEach(categoryItem => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(subcategoryItem => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach(fieldName => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${metadata.id}.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map(language => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach(file => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter(currentLanguage => currentLanguage !== 'en')\n          .forEach(currentLanguage => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach(file => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach(metadata => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach(metadata => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${'/**\\n' +\n    ' * @' +\n    'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '}${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog(config = siteConfig) {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach(file => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file, config);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path.basename(file).split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${filePathDateArr[2]}T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${'/**\\n' +\n    ' * @' +\n    'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '}${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/metadataUtils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/metadataUtils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue\n      .slice(1)\n      .join(':')\n      .trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach(id => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/blog.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/blog.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = /*#__PURE__*/React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: siteConfig\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  var metadata = getMetadata(file, siteConfig);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = /*#__PURE__*/React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: siteConfig\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwibWV0YWRhdGFVdGlscyIsInJlcGxhY2VBc3NldHNMaW5rIiwicmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSIsInVybFRvU291cmNlIiwidXJsIiwicmVwbGFjZSIsImZpbGVUb1VybCIsImZpbGUiLCJleGlzdHNTeW5jIiwiYmFzZW5hbWUiLCJnZXRQYWdlc01hcmt1cCIsIm51bU9mQmxvZyIsInNpdGVDb25maWciLCJCbG9nUGFnZUxheW91dCIsImJsb2dQYWdlcyIsInBlclBhZ2UiLCJwYWdlIiwiTWF0aCIsImNlaWwiLCJtZXRhZGF0YSIsImJsb2dQYWdlQ29tcCIsInN0ciIsInBhZ2VQYXRoIiwiZ2V0TWV0YWRhdGEiLCJyZXN1bHQiLCJleHRyYWN0TWV0YWRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsIk9iamVjdCIsImFzc2lnbiIsImNvbnRlbnQiLCJyYXdDb250ZW50IiwiYmFzZVVybCIsImlkIiwidGl0bGUiLCJnZXRQb3N0TWFya3VwIiwiQmxvZ1Bvc3RMYXlvdXQiLCJibG9nUG9zdENvbXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsVUFBRCxDQUFsQjs7QUFDQSxJQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUE3Qjs7ZUFDNEJBLE9BQU8sQ0FBQyxZQUFELEM7SUFBNUJJLGlCLFlBQUFBLGlCOztnQkFDbUNKLE9BQU8sQ0FBQyxlQUFELEM7SUFBMUNLLCtCLGFBQUFBLCtCOztBQUVQLFNBQVNDLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCO0FBQ3hCLE1BQUksQ0FB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Q0FBQ2hCLElBQUQsRUFBT0ssVUFBUCxDQUE1Qjs7QUFDQSxNQUFJLENBQUNPLFFBQUwsRUFBZTtBQUNiLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1pQixjQUFjLEdBQUd2QyxPQUFPLENBQUMsMkJBQUQsQ0FBOUI7O0FBQ0EsTUFBTXdDLFlBQVksZ0JBQ2hCLG9CQUFDLGNBQUQ7QUFBZ0IsSUFBQSxRQUFRLEVBQUVsQixRQUExQjtBQUFvQyxJQUFBLFFBQVEsRUFBQyxJQUE3QztBQUFrRCxJQUFBLE1BQU0sRUFBRVA7QUFBMUQsS0FDR08sUUFBUSxDQUFDVyxPQURaLENBREY7QUFLQSxTQUFPNUIsK0JBQStCLENBQUNtQyxZQUFELENBQXRDO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakMsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZpQixFQUFBQSxXQUFXLEVBQVhBLFdBRmU7QUFHZmIsRUFBQUEsY0FBYyxFQUFkQSxjQUhlO0FBSWZ5QixFQUFBQSxhQUFhLEVBQWJBLGFBSmU7QUFLZmhDLEVBQUFBLFdBQVcsRUFBWEE7QUFMZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9wZGNhbWFyZ28vd29ya3NwYWNlL2RyZWFtcGFjdC9kb2N1c2F1cnVzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBtZXRhZGF0YVV0aWxzID0gcmVxdWlyZSgnLi9tZXRhZGF0YVV0aWxzJyk7XG5jb25zdCB7cmVwbGFjZUFzc2V0c0xpbmt9ID0gcmVxdWlyZSgnLi91dGlscy5qcycpO1xuY29uc3Qge3JlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGV9ID0gcmVxdWlyZSgnLi9yZW5kZXJVdGlscycpO1xuXG5mdW5jdGlvbiB1cmxUb1NvdXJjZSh1cmwpIHtcbiAgaWYgKCF1cmwgfHwgdHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gdXJsLnJlcGxhY2UoLyhcXC9pbmRleCk/XFwuaHRtbCQvLCAnLm1kJykucmVwbGFjZSgvXFwvL2csICctJyk7XG59XG5cbmZ1bmN0aW9uIGZpbGVUb1VybChmaWxlKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSB8fCB0eXBlb2YgZmlsZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gcGF0aFxuICAgIC5iYXNlbmFtZShmaWxlKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKCctJywgJy8nKVxuICAgIC5yZXBsYWNlKC9cXC5tZCQvLCAnLmh0bWwnKTtcbn1cblxuZnVuY3Rpb24gZ2V0UGFnZXNNYXJrdXAobnVtT2ZCbG9nLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IEJsb2dQYWdlTGF5b3V0ID0gcmVxdWlyZSgnLi4vY29yZS9CbG9nUGFnZUxheW91dC5qcycpO1xuICBjb25zdCBibG9nUGFnZXMgPSB7fTtcbiAgY29uc3QgcGVyUGFnZSA9IDEwO1xuICBmb3IgKGxldCBwYWdlID0gMDsgcGFnZSA8IE1hdGguY2VpbChudW1PZkJsb2cgLyBwZXJQYWdlKTsgcGFnZSsrKSB7XG4gICAgY29uc3QgbWV0YWRhdGEgPSB7cGFnZSwgcGVyUGFnZX07XG4gICAgY29uc3QgYmxvZ1BhZ2VDb21wID0gKFxuICAgICAgPEJsb2dQYWdlTGF5b3V0IG1ldGFkYXRhPXttZXRhZGF0YX0gbGFuZ3VhZ2U9XCJlblwiIGNvbmZpZz17c2l0ZUNvbmZpZ30gLz5cbiAgICApO1xuICAgIGNvbnN0IHN0ciA9IHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoYmxvZ1BhZ2VDb21wKTtcbiAgICBjb25zdCBwYWdlUGF0aCA9IGAke3BhZ2UgPiAwID8gYHBhZ2Uke3BhZ2UgKyAxfWAgOiAnJ30vaW5kZXguaHRtbGA7XG4gICAgYmxvZ1BhZ2VzW3BhZ2VQYXRoXSA9IHN0cjtcbiAgfVxuICByZXR1cm4gYmxvZ1BhZ2VzO1xufVxuXG5mdW5jdGlvbiBnZXRNZXRhZGF0YShmaWxlLCBzaXRlQ29uZmlnKSB7XG4gIGlmICghZmlsZSB8fCAhZnMuZXhpc3RzU3luYyhmaWxlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG1ldGFkYXRhVXRpbHMuZXh0cmFjdE1ldGFkYXRhKFxuICAgIGZzLnJlYWRGaWxlU3luYyhmaWxlLCB7ZW5jb2Rpbmc6ICd1dGY4J30pLFxuICApO1xuICBjb25zdCBtZXRhZGF0YSA9IE9iamVjdC5hc3NpZ24oXG4gICAge1xuICAgICAgcGF0aDogZmlsZVRvVXJsKGZpbGUpLFxuICAgICAgY29udGVudDogcmVwbGFjZUFzc2V0c0xpbmsoXG4gICAgICAgIHJlc3VsdC5yYXdDb250ZW50LFxuICAgICAgICBgJHtzaXRlQ29uZmlnLmJhc2VVcmx9YmxvZ2AsXG4gICAgICApLFxuICAgIH0sXG4gICAgcmVzdWx0Lm1ldGFkYXRhLFxuICApO1xuICBtZXRhZGF0YS5pZCA9IG1ldGFkYXRhLnRpdGxlO1xuICByZXR1cm4gbWV0YWRhdGE7XG59XG5cbmZ1bmN0aW9uIGdldFBvc3RNYXJrdXAoZmlsZSwgc2l0ZUNvbmZpZykge1xuICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhKGZpbGUsIHNpdGVDb25maWcpO1xuICBpZiAoIW1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgQmxvZ1Bvc3RMYXlvdXQgPSByZXF1aXJlKCcuLi9jb3JlL0Jsb2dQb3N0TGF5b3V0LmpzJyk7XG4gIGNvbnN0IGJsb2dQb3N0Q29tcCA9IChcbiAgICA8QmxvZ1Bvc3RMYXlvdXQgbWV0YWRhdGE9e21ldGFkYXRhfSBsYW5ndWFnZT1cImVuXCIgY29uZmlnPXtzaXRlQ29uZmlnfT5cbiAgICAgIHttZXRhZGF0YS5jb250ZW50fVxuICAgIDwvQmxvZ1Bvc3RMYXlvdXQ+XG4gICk7XG4gIHJldHVybiByZW5kZXJUb1N0YXRpY01hcmt1cFdpdGhEb2N0eXBlKGJsb2dQb3N0Q29tcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBmaWxlVG9VcmwsXG4gIGdldE1ldGFkYXRhLFxuICBnZXRQYWdlc01hcmt1cCxcbiAgZ2V0UG9zdE1hcmt1cCxcbiAgdXJsVG9Tb3VyY2UsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "urlToSource",
        "url",
        "replace",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "siteConfig",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={siteConfig} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  const metadata = getMetadata(file, siteConfig);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={siteConfig}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/utils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/utils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false,\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwiZnJvbSIsInVuZGVmaW5lZCIsInRoZW4iLCJyZXN1bHQiLCJjc3MiLCJhdXRvUHJlZml4Q3NzIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHNCQUFELENBQWxD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LEVBQWlEO0FBQy9DLE1BQUlDLFdBQVcsR0FBRyxLQUFsQjtBQUNBLE1BQU1DLEtBQUssR0FBR0gsVUFBVSxDQUFDSSxLQUFYLENBQWlCLElBQWpCLEVBQXVCeEIsR0FBdkIsQ0FBMkIsVUFBQXlCLElBQUksRUFBSTtBQUMvQyxRQUFJQSxJQUFJLENBQUNDLElBQUwsR0FBWUMsVUFBWixDQUF1QixLQUF2QixDQUFKLEVBQW1DO0FBQ2pDTCxNQUFBQSxXQUFXLEdBQUcsQ0FBQ0EsV0FBZjtBQUNEOztBQUNELFdBQU9BLFdBQVcsR0FDZEcsSUFEYyxHQUVkQSxJQUFJLENBQUN4QyxPQUFMLENBQWEsZUFBYixjQUFtQ29DLFFBQW5DLGNBRko7QUFHRCxHQVBhLENBQWQ7QUFRQSxTQUFPRSxLQUFLLENBQUNLLElBQU4sQ0FBVyxJQUFYLENBQVA7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZuRCxFQUFBQSxTQUFTLEVBQVRBLFNBRGU7QUFFZlEsRUFBQUEsV0FBVyxFQUFYQSxXQUZlO0FBR2ZpQixFQUFBQSxhQUFhLEVBQWJBLGFBSGU7QUFJZkksRUFBQUEsU0FBUyxFQUFUQSxTQUplO0FBS2ZVLEVBQUFBLGFBQWEsRUFBYkEsYUFMZTtBQU1mQyxFQUFBQSxpQkFBaUIsRUFBakJBO0FBTmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGRjYW1hcmdvL3dvcmtzcGFjZS9kcmVhbXBhY3QvZG9jdXNhdXJ1cy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuY29uc3QgY3NzbmFubyA9IHJlcXVpcmUoJ2Nzc25hbm8nKTtcbmNvbnN0IGF1dG9wcmVmaXhlciA9IHJlcXVpcmUoJ2F1dG9wcmVmaXhlcicpO1xuY29uc3QgcG9zdGNzcyA9IHJlcXVpcmUoJ3Bvc3Rjc3MnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBlc2NhcGVTdHJpbmdSZWdleHAgPSByZXF1aXJlKCdlc2NhcGUtc3RyaW5nLXJlZ2V4cCcpO1xuXG5mdW5jdGlvbiBnZXRTdWJEaXIoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHN1YkRpciA9IHBhdGguZGlybmFtZShwYXRoLnJlbGF0aXZlKHJlZkRpciwgZmlsZSkpLnJlcGxhY2UoL1xcXFwvZywgJy8nKTtcbiAgcmV0dXJuIHN1YkRpciAhPT0gJy4nICYmICFzdWJEaXIuaW5jbHVkZXMoJy4uJykgPyBzdWJEaXIgOiBudWxsO1xufVxuXG5mdW5jdGlvbiBnZXRMYW5ndWFnZShmaWxlLCByZWZEaXIpIHtcbiAgY29uc3Qgc2VwYXJhdG9yID0gZXNjYXBlU3RyaW5nUmVnZXhwKHBhdGguc2VwKTtcbiAgY29uc3QgYmFzZURpciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChwYXRoLmJhc2VuYW1lKHJlZkRpcikpO1xuICBjb25zdCByZWdleFN1YkZvbGRlciA9IG5ldyBSZWdFeHAoXG4gICAgYCR7YmFzZURpcn0ke3NlcGFyYXRvcn0oLio/KSR7c2VwYXJhdG9yfS4qYCxcbiAgKTtcbiAgY29uc3QgbWF0Y2ggPSByZWdleFN1YkZvbGRlci5leGVjKGZpbGUpO1xuXG4gIC8vIEF2b2lkIG1pc2ludGVycHJldGluZyBzdWJkaXJlY3RvcnkgYXMgbGFuZ3VhZ2VcbiAgY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYuanMnKTtcbiAgaWYgKG1hdGNoICYmIGVudi50cmFuc2xhdGlvbi5lbmFibGVkKSB7XG4gICAgY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGVudi50cmFuc2xhdGlvblxuICAgICAgLmVuYWJsZWRMYW5ndWFnZXMoKVxuICAgICAgLm1hcChsYW5ndWFnZSA9PiBsYW5ndWFnZS50YWcpO1xuICAgIGlmIChlbmFibGVkTGFuZ3VhZ2VzLmluZGV4T2YobWF0Y2hbMV0pICE9PSAtMSkge1xuICAgICAgcmV0dXJuIG1hdGNoWzFdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNTZXBhcmF0ZUNzcyhmaWxlLCBzZXBhcmF0ZURpcnMpIHtcbiAgaWYgKCFzZXBhcmF0ZURpcnMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXBhcmF0ZURpcnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoZmlsZS5pbmNsdWRlcyhzZXBhcmF0ZURpcnNbaV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBtaW5pZnlDc3MoY3NzQ29udGVudCkge1xuICByZXR1cm4gY3NzbmFub1xuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIHByZXNldDogJ2RlZmF1bHQnLFxuICAgICAgemluZGV4OiBmYWxzZSxcbiAgICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB9KVxuICAgIC50aGVuKHJlc3VsdCA9PiByZXN1bHQuY3NzKTtcbn1cblxuZnVuY3Rpb24gYXV0b1ByZWZpeENzcyhjc3NDb250ZW50KSB7XG4gIHJldHVybiBwb3N0Y3NzKFthdXRvcHJlZml4ZXJdKVxuICAgIC5wcm9jZXNzKGNzc0NvbnRlbnQsIHtcbiAgICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB9KVxuICAgIC50aGVuKHJlc3VsdCA9PiByZXN1bHQuY3NzKTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUFzc2V0c0xpbmsob2xkQ29udGVudCwgbG9jYXRpb24pIHtcbiAgbGV0IGZlbmNlZEJsb2NrID0gZmFsc2U7XG4gIGNvbnN0IGxpbmVzID0gb2xkQ29udGVudC5zcGxpdCgnXFxuJykubWFwKGxpbmUgPT4ge1xuICAgIGlmIChsaW5lLnRyaW0oKS5zdGFydHNXaXRoKCdgYGAnKSkge1xuICAgICAgZmVuY2VkQmxvY2sgPSAhZmVuY2VkQmxvY2s7XG4gICAgfVxuICAgIHJldHVybiBmZW5jZWRCbG9ja1xuICAgICAgPyBsaW5lXG4gICAgICA6IGxpbmUucmVwbGFjZSgvXFxdXFwoYXNzZXRzXFwvL2csIGBdKCR7bG9jYXRpb259L2Fzc2V0cy9gKTtcbiAgfSk7XG4gIHJldHVybiBsaW5lcy5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFN1YkRpcixcbiAgZ2V0TGFuZ3VhZ2UsXG4gIGlzU2VwYXJhdGVDc3MsXG4gIG1pbmlmeUNzcyxcbiAgYXV0b1ByZWZpeENzcyxcbiAgcmVwbGFjZUFzc2V0c0xpbmssXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "from",
        "undefined",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map(language => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n      from: undefined,\n    })\n    .then(result => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then(result => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map(line => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/renderUtils.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/renderUtils.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/renderUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/renderUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "renderUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\n\n\nfunction renderToStaticMarkupWithDoctype() {\n  return \"<!DOCTYPE html>\".concat(renderToStaticMarkup.apply(void 0, arguments));\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype: renderToStaticMarkupWithDoctype\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlclV0aWxzLmpzIl0sIm5hbWVzIjpbInJlbmRlclRvU3RhdGljTWFya3VwIiwicmVxdWlyZSIsInJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQVAsQ0FBNEJELG9CQUF6RDtBQUVBOzs7Ozs7O0FBS0EsU0FBU0UsK0JBQVQsR0FBa0Q7QUFDaEQsa0NBQXlCRixvQkFBb0IsTUFBcEIsbUJBQXpCO0FBQ0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmRixFQUFBQSwrQkFBK0IsRUFBL0JBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGRjYW1hcmdvL3dvcmtzcGFjZS9kcmVhbXBhY3QvZG9jdXNhdXJ1cy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCByZW5kZXJUb1N0YXRpY01hcmt1cCA9IHJlcXVpcmUoJ3JlYWN0LWRvbS9zZXJ2ZXInKS5yZW5kZXJUb1N0YXRpY01hcmt1cDtcblxuLyoqXG4gKiBDdXN0b20gZnVuY3Rpb24gdGhhdCB3cmFwcyByZW5kZXJUb1N0YXRpY01hcmt1cCBzbyB0aGF0IHdlIGNhbiBpbmplY3RcbiAqIGRvY3R5cGUgYmVmb3JlIFJlYWN0IHJlbmRlcnMgdGhlIGNvbnRlbnRzLiBBbGwgaW5zdGFuY2Ugb2YgZnVsbC1wYWdlXG4gKiByZW5kZXJpbmcgd2l0aGluIERvY3VzYXVydXMgc2hvdWxkIHVzZSB0aGlzIGZ1bmN0aW9uIGluc3RlYWQuXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoLi4uYXJncykge1xuICByZXR1cm4gYDwhRE9DVFlQRSBodG1sPiR7cmVuZGVyVG9TdGF0aWNNYXJrdXAoLi4uYXJncyl9YDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "renderUtils.js"
      ],
      "names": [
        "renderToStaticMarkup",
        "require",
        "renderToStaticMarkupWithDoctype",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,oBAAzD;AAEA;;;;;;;AAKA,SAASE,+BAAT,GAAkD;AAChD,kCAAyBF,oBAAoB,MAApB,mBAAzB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,+BAA+B,EAA/BA;AADe,CAAjB",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\nfunction renderToStaticMarkupWithDoctype(...args) {\n  return `<!DOCTYPE html>${renderToStaticMarkup(...args)}`;\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/config.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/config.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFPQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsVUFBcEIsRUFBb0Q7QUFBQSxNQUFwQkMsV0FBb0IsdUVBQU4sSUFBTTs7QUFDbkUsTUFBSUEsV0FBSixFQUFpQjtBQUNmLFdBQU9MLE9BQU8sQ0FBQ00sS0FBUixDQUFjRixVQUFkLENBQVA7QUFDRDs7QUFDRCxNQUFJRyxNQUFNLEdBQUcsRUFBYjs7QUFDQSxNQUFJUixFQUFFLENBQUNTLFVBQUgsQ0FBY0osVUFBZCxDQUFKLEVBQStCO0FBQzdCRyxJQUFBQSxNQUFNLEdBQUdQLE9BQU8sQ0FBQ0ksVUFBRCxDQUFoQixDQUQ2QixDQUNDO0FBQy9CO0FBRUQ7OztBQUNBLE1BQU1LLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsY0FBYyxFQUFFLE1BREk7QUFFcEJDLElBQUFBLE9BQU8sRUFBRTtBQUZXLEdBQXRCO0FBSUFDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixhQUFaLEVBQTJCSyxPQUEzQixDQUFtQyxVQUFBQyxLQUFLLEVBQUk7QUFDMUMsUUFBSSxFQUFFQSxLQUFLLElBQUlSLE1BQVgsQ0FBSixFQUF3QjtBQUN0QkEsTUFBQUEsTUFBTSxDQUFDUSxLQUFELENBQU4sR0FBZ0JOLGFBQWEsQ0FBQ00sS0FBRCxDQUE3QjtBQUNEO0FBQ0YsR0FKRDtBQU1BLFNBQU9SLE1BQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9wZGNhbWFyZ28vd29ya3NwYWNlL2RyZWFtcGFjdC9kb2N1c2F1cnVzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkQ29uZmlnKGNvbmZpZ1BhdGgsIGRlbGV0ZUNhY2hlID0gdHJ1ZSkge1xuICBpZiAoZGVsZXRlQ2FjaGUpIHtcbiAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVtjb25maWdQYXRoXTtcbiAgfVxuICBsZXQgY29uZmlnID0ge307XG4gIGlmIChmcy5leGlzdHNTeW5jKGNvbmZpZ1BhdGgpKSB7XG4gICAgY29uZmlnID0gcmVxdWlyZShjb25maWdQYXRoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB9XG5cbiAgLyogRmlsbCBkZWZhdWx0IHZhbHVlICovXG4gIGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gICAgY3VzdG9tRG9jc1BhdGg6ICdkb2NzJyxcbiAgICBkb2NzVXJsOiAnZG9jcycsXG4gIH07XG4gIE9iamVjdC5rZXlzKGRlZmF1bHRDb25maWcpLmZvckVhY2goZmllbGQgPT4ge1xuICAgIGlmICghKGZpZWxkIGluIGNvbmZpZykpIHtcbiAgICAgIGNvbmZpZ1tmaWVsZF0gPSBkZWZhdWx0Q29uZmlnW2ZpZWxkXTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;;;;;;AAOA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAAAC,KAAK,EAAI;AAC1C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach(field => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/versionFallback.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/versionFallback.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && available[id].has(versions[i])) {\n      return versions[i];\n    }\n  }\n\n  return null;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "Object",
        "keys",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach(file => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound && available[id].has(versions[i])) {\n      return versions[i];\n    }\n  }\n  return null;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${metadata.original_id}.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${metadata.original_id}.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach(version => {\n    Object.keys(versionFiles[version]).forEach(id => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter(language => language.enabled)\n    .forEach(language => {\n      versions.forEach(version => {\n        allIds.forEach(id => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/server.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/server.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\nfunction execute(port, host) {\n  var extractTranslations = require('../write-translations');\n\n  var metadataUtils = require('./metadataUtils');\n\n  var blog = require('./blog');\n\n  var docs = require('./docs');\n\n  var env = require('./env.js');\n\n  var express = require('express');\n\n  var React = require('react');\n\n  var request = require('request');\n\n  var fs = require('fs-extra');\n\n  var path = require('path');\n\n  var _require = require('./utils'),\n      isSeparateCss = _require.isSeparateCss;\n\n  var mkdirp = require('mkdirp');\n\n  var glob = require('glob');\n\n  var chalk = require('chalk');\n\n  var translate = require('./translate');\n\n  var _require2 = require('./renderUtils'),\n      renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\n  var feed = require('./feed');\n\n  var sitemap = require('./sitemap');\n\n  var routing = require('./routing');\n\n  var loadConfig = require('./config');\n\n  var CWD = process.cwd();\n  var join = path.join;\n  var sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(function (cacheKey) {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  } // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n\n\n  function removeModuleAndChildrenFromCache(moduleName) {\n    var mod = require.resolve(moduleName);\n\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(function (child) {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  var readMetadata = require('./readMetadata.js');\n\n  var Metadata;\n  var MetadataBlog;\n  var siteConfig;\n\n  function reloadSiteConfig() {\n    var siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    var oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, function (error, response, body) {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n  var app = express();\n  app.get(routing.docs(siteConfig), function (req, res, next) {\n    var url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    var metakey = Object.keys(Metadata).find(function (id) {\n      return Metadata[id].permalink === url;\n    });\n    var metadata = Metadata[metakey];\n    var file = docs.getFile(metadata);\n\n    if (!file) {\n      next();\n      return;\n    }\n\n    var _metadataUtils$extrac = metadataUtils.extractMetadata(file),\n        rawContent = _metadataUtils$extrac.rawContent,\n        rawMetadata = _metadataUtils$extrac.metadata; // if any of the followings is changed, reload the metadata\n\n\n    var reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n\n    if (reloadTriggers.some(function (key) {\n      return metadata[key] !== rawMetadata[key];\n    })) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    var mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n  app.get(routing.sitemap(siteConfig), function (req, res) {\n    sitemap(function (err, xml) {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n  app.get(routing.feed(siteConfig), function (req, res, next) {\n    res.set('Content-Type', 'application/rss+xml');\n    var file = req.path.toString().split('blog/')[1].toLowerCase();\n\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n\n    next();\n  });\n  app.get(routing.blog(siteConfig), function (req, res, next) {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    var blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    var urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[\"\".concat(urlPath.replace(/\\/$/, ''), \"/index.html\")]);\n    } else {\n      var file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      var blogPost = blog.getPostMarkup(file, siteConfig);\n\n      if (!blogPost) {\n        next();\n        return;\n      }\n\n      res.send(blogPost);\n    }\n  });\n  app.get(routing.page(siteConfig), function (req, res, next) {\n    reloadSiteConfig(); // Look for user-provided HTML file first.\n\n    var htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n\n    if (fs.existsSync(htmlFile) || fs.existsSync(htmlFile = htmlFile.replace(path.basename(htmlFile), join('en', path.basename(htmlFile))))) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n        var Site = require(join('..', 'core', 'Site.js'));\n\n        var str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n          language: \"en\",\n          config: siteConfig,\n          metadata: {\n            id: path.basename(htmlFile, '.html')\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: fs.readFileSync(htmlFile, {\n              encoding: 'utf8'\n            })\n          }\n        })));\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {\n          encoding: 'utf8'\n        }));\n      }\n\n      next();\n      return;\n    } // look for user provided react file either in specified path or in path for english files\n\n\n    var file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    var userFile = join(CWD, 'pages', file);\n    var language = env.translation.enabled ? 'en' : '';\n    var regexLang = /(.*)\\/.*\\.html$/;\n    var match = regexLang.exec(req.path);\n    var parts = match[1].split('/');\n    var enabledLangTags = env.translation.enabledLanguages().map(function (lang) {\n      return lang.tag;\n    });\n\n    for (var i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    var englishFile = join(CWD, 'pages', file);\n\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, \"\".concat(sep, \"en\").concat(sep));\n    } // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n\n\n    if (fs.existsSync(userFile) || fs.existsSync(userFile = userFile.replace(path.basename(userFile), \"en\".concat(sep).concat(path.basename(userFile)))) || fs.existsSync(userFile = englishFile)) {\n      // copy into docusaurus so require paths work\n      var userFileParts = userFile.split(join(CWD, \"pages\".concat(sep)));\n      var tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(path.basename(file), \"temp\".concat(path.basename(file)));\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile); // render into a string\n\n      removeModuleAndChildrenFromCache(tempFile);\n\n      var ReactComp = require(tempFile);\n\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n\n      var _Site = require(join('..', 'core', 'Site.js'));\n\n      translate.setLanguage(language);\n\n      var _str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(_Site, {\n        language: language,\n        config: siteConfig,\n        title: ReactComp.title,\n        description: ReactComp.description,\n        metadata: {\n          id: path.basename(userFile, '.js')\n        }\n      }, /*#__PURE__*/React.createElement(ReactComp, {\n        config: siteConfig,\n        language: language\n      })));\n\n      fs.removeSync(tempFile);\n      res.send(_str);\n    } else {\n      next();\n    }\n  });\n  app.get(\"\".concat(siteConfig.baseUrl, \"css/main.css\"), function (req, res) {\n    var mainCssPath = join(__dirname, '..', 'static', req.path.toString().replace(siteConfig.baseUrl, '/'));\n    var cssContent = fs.readFileSync(mainCssPath, {\n      encoding: 'utf8'\n    });\n    var files = glob.sync(join(CWD, 'static', '**', '*.css'));\n    files.forEach(function (file) {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n\n      cssContent = \"\".concat(cssContent, \"\\n\").concat(fs.readFileSync(file, {\n        encoding: 'utf8'\n      }));\n    });\n\n    if (!siteConfig.colors || !siteConfig.colors.primaryColor || !siteConfig.colors.secondaryColor) {\n      console.error(\"\".concat(chalk.yellow('Missing color configuration.'), \" Make sure siteConfig.colors includes primaryColor and secondaryColor fields.\"));\n    }\n\n    Object.keys(siteConfig.colors).forEach(function (key) {\n      var color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(function (key) {\n        var fontString = siteConfig.fonts[key].map(function (font) {\n          return \"\\\"\".concat(font, \"\\\"\");\n        }).join(', ');\n        cssContent = cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  }); // serve static assets from these locations\n\n  app.use(\"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '', \"assets\"), express.static(join(CWD, '..', readMetadata.getDocsPath(), 'assets')));\n  app.use(\"\".concat(siteConfig.baseUrl, \"blog/assets\"), express.static(join(CWD, 'blog', 'assets')));\n  app.use(siteConfig.baseUrl, express.static(join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express.static(join(__dirname, '..', 'static'))); // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n\n  app.get(routing.noExtension(), function (req, res, next) {\n    var slash = req.path.toString().endsWith('/') ? '' : '/';\n    var requestUrl = \"http://\".concat(host, \":\").concat(port).concat(req.path);\n    requestFile(\"\".concat(requestUrl + slash, \"index.html\"), res, function () {\n      requestFile(slash === '/' ? \"\".concat(requestUrl, \".html\") : requestUrl.replace(/\\/$/, '.html'), res, next);\n    });\n  }); // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n\n  app.get(routing.dotfiles(), function (req, res, next) {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n\n    requestFile(\"http://\".concat(host, \":\").concat(port).concat(req.path, \".html\"), res, next);\n  });\n  app.listen(port);\n}\n\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "execute",
        "port",
        "host",
        "extractTranslations",
        "require",
        "metadataUtils",
        "blog",
        "docs",
        "env",
        "express",
        "React",
        "request",
        "fs",
        "path",
        "isSeparateCss",
        "mkdirp",
        "glob",
        "chalk",
        "translate",
        "renderToStaticMarkupWithDoctype",
        "feed",
        "sitemap",
        "routing",
        "loadConfig",
        "CWD",
        "process",
        "cwd",
        "join",
        "sep",
        "removeModulePathFromCache",
        "moduleName",
        "Object",
        "keys",
        "module",
        "constructor",
        "_pathCache",
        "forEach",
        "cacheKey",
        "indexOf",
        "removeModuleAndChildrenFromCache",
        "mod",
        "resolve",
        "cache",
        "children",
        "child",
        "id",
        "readMetadata",
        "Metadata",
        "MetadataBlog",
        "siteConfig",
        "reloadSiteConfig",
        "siteConfigPath",
        "oldBaseUrl",
        "baseUrl",
        "console",
        "log",
        "exit",
        "reloadMetadata",
        "generateMetadataDocs",
        "reloadMetadataBlog",
        "existsSync",
        "__dirname",
        "removeSync",
        "generateMetadataBlog",
        "reloadTranslations",
        "requestFile",
        "url",
        "res",
        "notFoundCallback",
        "get",
        "error",
        "response",
        "body",
        "statusCode",
        "status",
        "send",
        "app",
        "req",
        "next",
        "decodeURI",
        "toString",
        "replace",
        "metakey",
        "find",
        "permalink",
        "metadata",
        "file",
        "getFile",
        "extractMetadata",
        "rawContent",
        "rawMetadata",
        "reloadTriggers",
        "some",
        "key",
        "mdToHtml",
        "getMarkup",
        "err",
        "xml",
        "set",
        "split",
        "toLowerCase",
        "blogPages",
        "getPagesMarkup",
        "length",
        "urlPath",
        "endsWith",
        "match",
        "urlToSource",
        "blogPost",
        "getPostMarkup",
        "page",
        "htmlFile",
        "basename",
        "wrapPagesHTML",
        "Site",
        "str",
        "__html",
        "readFileSync",
        "encoding",
        "userFile",
        "language",
        "translation",
        "enabled",
        "regexLang",
        "exec",
        "parts",
        "enabledLangTags",
        "enabledLanguages",
        "map",
        "lang",
        "tag",
        "i",
        "englishFile",
        "userFileParts",
        "tempFile",
        "sync",
        "dirname",
        "copySync",
        "ReactComp",
        "setLanguage",
        "title",
        "description",
        "mainCssPath",
        "cssContent",
        "files",
        "separateCss",
        "colors",
        "primaryColor",
        "secondaryColor",
        "yellow",
        "color",
        "RegExp",
        "fonts",
        "fontString",
        "font",
        "header",
        "use",
        "docsUrl",
        "static",
        "getDocsPath",
        "noExtension",
        "slash",
        "requestUrl",
        "dotfiles",
        "cleanUrl",
        "listen",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable no-cond-assign */\n\nfunction execute(port, host) {\n  const extractTranslations = require('../write-translations');\n  const metadataUtils = require('./metadataUtils');\n  const blog = require('./blog');\n  const docs = require('./docs');\n  const env = require('./env.js');\n  const express = require('express');\n  const React = require('react');\n  const request = require('request');\n  const fs = require('fs-extra');\n  const path = require('path');\n  const {isSeparateCss} = require('./utils');\n  const mkdirp = require('mkdirp');\n  const glob = require('glob');\n  const chalk = require('chalk');\n  const translate = require('./translate');\n  const {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n  const feed = require('./feed');\n  const sitemap = require('./sitemap');\n  const routing = require('./routing');\n  const loadConfig = require('./config');\n  const CWD = process.cwd();\n  const join = path.join;\n  const sep = path.sep;\n\n  function removeModulePathFromCache(moduleName) {\n    /* eslint-disable no-underscore-dangle */\n    Object.keys(module.constructor._pathCache).forEach(cacheKey => {\n      if (cacheKey.indexOf(moduleName) > 0) {\n        delete module.constructor._pathCache[cacheKey];\n      }\n    });\n  }\n\n  // Remove a module and child modules from require cache, so server\n  // does not have to be restarted.\n  function removeModuleAndChildrenFromCache(moduleName) {\n    let mod = require.resolve(moduleName);\n    if (mod && (mod = require.cache[mod])) {\n      mod.children.forEach(child => {\n        delete require.cache[child.id];\n        removeModulePathFromCache(mod.id);\n      });\n      delete require.cache[mod.id];\n      removeModulePathFromCache(mod.id);\n    }\n  }\n\n  const readMetadata = require('./readMetadata.js');\n  let Metadata;\n  let MetadataBlog;\n  let siteConfig;\n\n  function reloadSiteConfig() {\n    const siteConfigPath = join(CWD, 'siteConfig.js');\n    removeModuleAndChildrenFromCache(siteConfigPath);\n    const oldBaseUrl = siteConfig && siteConfig.baseUrl;\n    siteConfig = loadConfig(siteConfigPath);\n\n    if (oldBaseUrl && oldBaseUrl !== siteConfig.baseUrl) {\n      console.log('Base url has changed. Please restart server ...');\n      process.exit();\n    }\n  }\n\n  function reloadMetadata() {\n    removeModuleAndChildrenFromCache('./readMetadata.js');\n    readMetadata.generateMetadataDocs();\n    removeModuleAndChildrenFromCache('../core/metadata.js');\n    Metadata = require('../core/metadata.js');\n  }\n\n  function reloadMetadataBlog() {\n    if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n      removeModuleAndChildrenFromCache(join('..', 'core', 'MetadataBlog.js'));\n      fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n    }\n    reloadSiteConfig();\n    readMetadata.generateMetadataBlog(siteConfig);\n    MetadataBlog = require(join('..', 'core', 'MetadataBlog.js'));\n  }\n\n  function reloadTranslations() {\n    removeModuleAndChildrenFromCache('./translation.js');\n  }\n\n  function requestFile(url, res, notFoundCallback) {\n    request.get(url, (error, response, body) => {\n      if (!error) {\n        if (response) {\n          if (response.statusCode === 404 && notFoundCallback) {\n            notFoundCallback();\n          } else {\n            res.status(response.statusCode).send(body);\n          }\n        } else {\n          console.error('No response');\n        }\n      } else {\n        console.error('Request failed:', error);\n      }\n    });\n  }\n\n  reloadMetadata();\n  reloadMetadataBlog();\n  extractTranslations();\n  reloadSiteConfig();\n\n  const app = express();\n\n  app.get(routing.docs(siteConfig), (req, res, next) => {\n    const url = decodeURI(req.path.toString().replace(siteConfig.baseUrl, ''));\n    const metakey = Object.keys(Metadata).find(\n      id => Metadata[id].permalink === url,\n    );\n\n    let metadata = Metadata[metakey];\n\n    const file = docs.getFile(metadata);\n    if (!file) {\n      next();\n      return;\n    }\n    const {rawContent, metadata: rawMetadata} = metadataUtils.extractMetadata(\n      file,\n    );\n\n    // if any of the followings is changed, reload the metadata\n    const reloadTriggers = ['sidebar_label', 'hide_title', 'title'];\n    if (reloadTriggers.some(key => metadata[key] !== rawMetadata[key])) {\n      reloadMetadata();\n      extractTranslations();\n      reloadTranslations();\n      metadata = Metadata[metakey];\n    }\n\n    reloadSiteConfig();\n    removeModuleAndChildrenFromCache('../core/DocsLayout.js');\n    const mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n    res.send(docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig));\n  });\n\n  app.get(routing.sitemap(siteConfig), (req, res) => {\n    sitemap((err, xml) => {\n      if (err) {\n        res.status(500).send('Sitemap error');\n      } else {\n        res.set('Content-Type', 'application/xml');\n        res.send(xml);\n      }\n    });\n  });\n\n  app.get(routing.feed(siteConfig), (req, res, next) => {\n    res.set('Content-Type', 'application/rss+xml');\n    const file = req.path\n      .toString()\n      .split('blog/')[1]\n      .toLowerCase();\n    if (file === 'atom.xml') {\n      res.send(feed('atom'));\n    } else if (file === 'feed.xml') {\n      res.send(feed('rss'));\n    }\n    next();\n  });\n\n  app.get(routing.blog(siteConfig), (req, res, next) => {\n    // Regenerate the blog metadata in case it has changed. Consider improving\n    // this to regenerate on file save rather than on page request.\n    reloadMetadataBlog();\n    removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPageLayout.js'));\n    const blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n    const urlPath = req.path.toString().split('blog/')[1];\n\n    if (urlPath === 'index.html') {\n      res.send(blogPages['/index.html']);\n    } else if (urlPath.endsWith('/index.html') && blogPages[urlPath]) {\n      res.send(blogPages[urlPath]);\n    } else if (urlPath.match(/page([0-9]+)/)) {\n      res.send(blogPages[`${urlPath.replace(/\\/$/, '')}/index.html`]);\n    } else {\n      const file = join(CWD, 'blog', blog.urlToSource(urlPath));\n      removeModuleAndChildrenFromCache(join('..', 'core', 'BlogPostLayout.js'));\n      const blogPost = blog.getPostMarkup(file, siteConfig);\n      if (!blogPost) {\n        next();\n        return;\n      }\n      res.send(blogPost);\n    }\n  });\n\n  app.get(routing.page(siteConfig), (req, res, next) => {\n    reloadSiteConfig();\n    // Look for user-provided HTML file first.\n    let htmlFile = req.path.toString().replace(siteConfig.baseUrl, '');\n    htmlFile = join(CWD, 'pages', htmlFile);\n    if (\n      fs.existsSync(htmlFile) ||\n      fs.existsSync(\n        (htmlFile = htmlFile.replace(\n          path.basename(htmlFile),\n          join('en', path.basename(htmlFile)),\n        )),\n      )\n    ) {\n      if (siteConfig.wrapPagesHTML) {\n        removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n        const Site = require(join('..', 'core', 'Site.js'));\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            language=\"en\"\n            config={siteConfig}\n            metadata={{id: path.basename(htmlFile, '.html')}}>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: fs.readFileSync(htmlFile, {encoding: 'utf8'}),\n              }}\n            />\n          </Site>,\n        );\n\n        res.send(str);\n      } else {\n        res.send(fs.readFileSync(htmlFile, {encoding: 'utf8'}));\n      }\n      next();\n      return;\n    }\n\n    // look for user provided react file either in specified path or in path for english files\n    let file = req.path.toString().replace(/\\.html$/, '.js');\n    file = file.replace(siteConfig.baseUrl, '');\n    let userFile = join(CWD, 'pages', file);\n\n    let language = env.translation.enabled ? 'en' : '';\n    const regexLang = /(.*)\\/.*\\.html$/;\n    const match = regexLang.exec(req.path);\n    const parts = match[1].split('/');\n    const enabledLangTags = env.translation\n      .enabledLanguages()\n      .map(lang => lang.tag);\n\n    for (let i = 0; i < parts.length; i++) {\n      if (enabledLangTags.indexOf(parts[i]) !== -1) {\n        language = parts[i];\n      }\n    }\n\n    let englishFile = join(CWD, 'pages', file);\n    if (language && language !== 'en') {\n      englishFile = englishFile.replace(sep + language + sep, `${sep}en${sep}`);\n    }\n\n    // check for: a file for the page, an english file for page with unspecified language, or an\n    // english file for the page\n    if (\n      fs.existsSync(userFile) ||\n      fs.existsSync(\n        (userFile = userFile.replace(\n          path.basename(userFile),\n          `en${sep}${path.basename(userFile)}`,\n        )),\n      ) ||\n      fs.existsSync((userFile = englishFile))\n    ) {\n      // copy into docusaurus so require paths work\n      const userFileParts = userFile.split(join(CWD, `pages${sep}`));\n      let tempFile = join(__dirname, '..', 'pages', userFileParts[1]);\n      tempFile = tempFile.replace(\n        path.basename(file),\n        `temp${path.basename(file)}`,\n      );\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(userFile, tempFile);\n\n      // render into a string\n      removeModuleAndChildrenFromCache(tempFile);\n      const ReactComp = require(tempFile);\n      removeModuleAndChildrenFromCache(join('..', 'core', 'Site.js'));\n      const Site = require(join('..', 'core', 'Site.js'));\n      translate.setLanguage(language);\n      const str = renderToStaticMarkupWithDoctype(\n        <Site\n          language={language}\n          config={siteConfig}\n          title={ReactComp.title}\n          description={ReactComp.description}\n          metadata={{id: path.basename(userFile, '.js')}}>\n          <ReactComp config={siteConfig} language={language} />\n        </Site>,\n      );\n\n      fs.removeSync(tempFile);\n\n      res.send(str);\n    } else {\n      next();\n    }\n  });\n\n  app.get(`${siteConfig.baseUrl}css/main.css`, (req, res) => {\n    const mainCssPath = join(\n      __dirname,\n      '..',\n      'static',\n      req.path.toString().replace(siteConfig.baseUrl, '/'),\n    );\n    let cssContent = fs.readFileSync(mainCssPath, {encoding: 'utf8'});\n\n    const files = glob.sync(join(CWD, 'static', '**', '*.css'));\n\n    files.forEach(file => {\n      if (isSeparateCss(file, siteConfig.separateCss)) {\n        return;\n      }\n      cssContent = `${cssContent}\\n${fs.readFileSync(file, {\n        encoding: 'utf8',\n      })}`;\n    });\n\n    if (\n      !siteConfig.colors ||\n      !siteConfig.colors.primaryColor ||\n      !siteConfig.colors.secondaryColor\n    ) {\n      console.error(\n        `${chalk.yellow(\n          'Missing color configuration.',\n        )} Make sure siteConfig.colors includes primaryColor and secondaryColor fields.`,\n      );\n    }\n\n    Object.keys(siteConfig.colors).forEach(key => {\n      const color = siteConfig.colors[key];\n      cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n    });\n\n    if (siteConfig.fonts) {\n      Object.keys(siteConfig.fonts).forEach(key => {\n        const fontString = siteConfig.fonts[key]\n          .map(font => `\"${font}\"`)\n          .join(', ');\n        cssContent = cssContent.replace(\n          new RegExp(`\\\\$${key}`, 'g'),\n          fontString,\n        );\n      });\n    }\n\n    res.header('Content-Type', 'text/css');\n    res.send(cssContent);\n  });\n\n  // serve static assets from these locations\n  app.use(\n    `${siteConfig.baseUrl}${\n      siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''\n    }assets`,\n    express.static(join(CWD, '..', readMetadata.getDocsPath(), 'assets')),\n  );\n  app.use(\n    `${siteConfig.baseUrl}blog/assets`,\n    express.static(join(CWD, 'blog', 'assets')),\n  );\n  app.use(siteConfig.baseUrl, express.static(join(CWD, 'static')));\n  app.use(siteConfig.baseUrl, express.static(join(__dirname, '..', 'static')));\n\n  // \"redirect\" requests to pages ending with \"/\" or no extension so that,\n  // for example, request to \"blog\" returns \"blog/index.html\" or \"blog.html\"\n  app.get(routing.noExtension(), (req, res, next) => {\n    const slash = req.path.toString().endsWith('/') ? '' : '/';\n    const requestUrl = `http://${host}:${port}${req.path}`;\n    requestFile(`${requestUrl + slash}index.html`, res, () => {\n      requestFile(\n        slash === '/'\n          ? `${requestUrl}.html`\n          : requestUrl.replace(/\\/$/, '.html'),\n        res,\n        next,\n      );\n    });\n  });\n\n  // handle special cleanUrl case like '/blog/1.2.3' & '/blog.robots.hai'\n  // where we should try to serve '/blog/1.2.3.html' & '/blog.robots.hai.html'\n  app.get(routing.dotfiles(), (req, res, next) => {\n    if (!siteConfig.cleanUrl) {\n      next();\n      return;\n    }\n    requestFile(`http://${host}:${port}${req.path}.html`, res, next);\n  });\n\n  app.listen(port);\n}\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  },
  "{\"sourceRoot\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"filename\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/write-translations.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pdcamargo/workspace/dreampact/docusaurus/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.9.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/write-translations.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/pdcamargo/workspace/dreampact/docusaurus/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/write-translations.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/write-translations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/",
        "sourceFileName": "write-translations.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\"use strict\";\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, \"\".concat(process.cwd(), \"/core\")],\n  plugins: [require('./server/translate-plugin.js'), require('@babel/plugin-proposal-class-properties').default, require('@babel/plugin-proposal-object-rest-spread').default],\n  presets: [require('@babel/preset-react').default, require('@babel/preset-env').default]\n});\n\nvar traverse = require('@babel/traverse').default;\n\nvar babylon = require('babylon');\n\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar mkdirp = require('mkdirp');\n\nvar nodePath = require('path');\n\nvar _ = require('lodash');\n\nvar readMetadata = require('./server/readMetadata.js');\n\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar sidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n\nvar customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {}\n  },\n  'pages-strings': {}\n};\n\nif (fs.existsSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"))) {\n  customTranslations = _.merge({}, JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"), 'utf8')), customTranslations);\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  var translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {}\n    },\n    'pages-strings': {}\n  }; // look through markdown headers of docs for titles and categories to translate\n\n  var docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  var versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  var translateDoc = function translateDoc(file, refDir) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.md' || extension === '.markdown') {\n      var res;\n\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n\n      if (!res) {\n        return;\n      }\n\n      var metadata = res.metadata;\n      var id = metadata.localized_id;\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label = metadata.sidebar_label;\n      }\n    }\n  };\n\n  glob.sync(\"\".concat(docsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, docsDir);\n  });\n  glob.sync(\"\".concat(versionedDocsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, versionedDocsDir);\n  }); // look through header links for text to translate\n\n  siteConfig.headerLinks.forEach(function (link) {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  }); // find sidebar category titles to translate\n\n  Object.keys(sidebars).forEach(function (sb) {\n    var categories = sidebars[sb];\n    Object.keys(categories).forEach(function (category) {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n  glob.sync(\"\".concat(CWD, \"/versioned_sidebars/*\")).forEach(function (file) {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\"Skipping \".concat(file, \". Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.\"));\n      }\n\n      return;\n    }\n\n    var sidebarContent;\n\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(\"Could not parse \".concat(file, \" into json. \").concat(e));\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach(function (sb) {\n      var categories = sidebarContent[sb];\n      Object.keys(categories).forEach(function (category) {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  }); // go through pages to look for text inside translate tags\n\n  glob.sync(\"\".concat(CWD, \"/pages/en/**\")).forEach(function (file) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.js') {\n      var ast = babylon.parse(fs.readFileSync(file, 'utf8'), {\n        plugins: ['jsx']\n      });\n      traverse(ast, {\n        enter: function enter(path) {\n          if (path.node.type === 'JSXElement' && path.node.openingElement.name.name === 'translate') {\n            var text = path.node.children[0].value.trim().replace(/\\s+/g, ' ');\n            var description = 'no description given';\n            var attributes = path.node.openingElement.attributes;\n\n            for (var i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n\n            translations['pages-strings'][\"\".concat(text, \"|\").concat(description)] = text;\n          }\n        }\n      });\n    }\n  }); // Manually add 'Help Translate' to en.json\n\n  translations['pages-strings']['Help Translate|recruit community translators for your project'] = 'Help Translate';\n  translations['pages-strings']['Edit this Doc|recruitment message asking to edit the doc source'] = 'Edit';\n  translations['pages-strings']['Translate this Doc|recruitment message asking to translate the docs'] = 'Translate';\n  translations['pages-strings'] = Object.assign(translations['pages-strings'], customTranslations['pages-strings']);\n  translations['localized-strings'] = _.merge({}, translations['localized-strings'], customTranslations['localized-strings']);\n  writeFileAndCreateFolder(\"\".concat(CWD, \"/i18n/en.json\"), \"\".concat(JSON.stringify(Object.assign({\n    _comment: 'This file is auto-generated by write-translations.js'\n  }, translations), null, 2), \"\\n\"));\n}\n\nexecute();\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRlLXRyYW5zbGF0aW9ucy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiYmFiZWxyYyIsIm9ubHkiLCJfX2Rpcm5hbWUiLCJwcm9jZXNzIiwiY3dkIiwicGx1Z2lucyIsImRlZmF1bHQiLCJwcmVzZXRzIiwidHJhdmVyc2UiLCJiYWJ5bG9uIiwiZnMiLCJnbG9iIiwibWtkaXJwIiwibm9kZVBhdGgiLCJfIiwicmVhZE1ldGFkYXRhIiwiQ1dEIiwic2l0ZUNvbmZpZyIsInNpZGViYXJzIiwiY3VzdG9tVHJhbnNsYXRpb25zIiwiZG9jcyIsImxpbmtzIiwiY2F0ZWdvcmllcyIsImV4aXN0c1N5bmMiLCJtZXJnZSIsIkpTT04iLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsIndyaXRlRmlsZUFuZENyZWF0ZUZvbGRlciIsImZpbGUiLCJjb250ZW50Iiwic3luYyIsInJlcGxhY2UiLCJSZWdFeHAiLCJ3cml0ZUZpbGVTeW5jIiwiZXhlY3V0ZSIsInRyYW5zbGF0aW9ucyIsIm5leHQiLCJwcmV2aW91cyIsInRhZ2xpbmUiLCJkb2NzRGlyIiwiam9pbiIsImdldERvY3NQYXRoIiwidmVyc2lvbmVkRG9jc0RpciIsInRyYW5zbGF0ZURvYyIsInJlZkRpciIsImV4dGVuc2lvbiIsImV4dG5hbWUiLCJyZXMiLCJwcm9jZXNzTWV0YWRhdGEiLCJlIiwiY29uc29sZSIsImVycm9yIiwiZXhpdCIsIm1ldGFkYXRhIiwiaWQiLCJsb2NhbGl6ZWRfaWQiLCJ0aXRsZSIsInNpZGViYXJfbGFiZWwiLCJmb3JFYWNoIiwiaGVhZGVyTGlua3MiLCJsaW5rIiwibGFiZWwiLCJPYmplY3QiLCJrZXlzIiwic2IiLCJjYXRlZ29yeSIsImVuZHNXaXRoIiwid2FybiIsInNpZGViYXJDb250ZW50IiwiYXN0IiwiZW50ZXIiLCJwYXRoIiwibm9kZSIsInR5cGUiLCJvcGVuaW5nRWxlbWVudCIsIm5hbWUiLCJ0ZXh0IiwiY2hpbGRyZW4iLCJ2YWx1ZSIsInRyaW0iLCJkZXNjcmlwdGlvbiIsImF0dHJpYnV0ZXMiLCJpIiwibGVuZ3RoIiwiYXNzaWduIiwic3RyaW5naWZ5IiwiX2NvbW1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7Ozs7OztBQU9BOzs7QUFFQUEsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkI7QUFDekJDLEVBQUFBLE9BQU8sRUFBRSxLQURnQjtBQUV6QkMsRUFBQUEsSUFBSSxFQUFFLENBQUNDLFNBQUQsWUFBZUMsT0FBTyxDQUFDQyxHQUFSLEVBQWYsV0FGbUI7QUFHekJDLEVBQUFBLE9BQU8sRUFBRSxDQUNQTixPQUFPLENBQUMsOEJBQUQsQ0FEQSxFQUVQQSxPQUFPLENBQUMseUNBQUQsQ0FBUCxDQUFtRE8sT0FGNUMsRUFHUFAsT0FBTyxDQUFDLDJDQUFELENBQVAsQ0FBcURPLE9BSDlDLENBSGdCO0FBUXpCQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUFIsT0FBTyxDQUFDLHFCQUFELENBQVAsQ0FBK0JPLE9BRHhCLEVBRVBQLE9BQU8sQ0FBQyxtQkFBRCxDQUFQLENBQTZCTyxPQUZ0QjtBQVJnQixDQUEzQjs7QUFjQSxJQUFNRSxRQUFRLEdBQUdULE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCTyxPQUE1Qzs7QUFDQSxJQUFNRyxPQUFPLEdBQUdWLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1XLEVBQUUsR0FBR1gsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBQ0EsSUFBTVksSUFBSSxHQUFHWixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNYSxNQUFNLEdBQUdiLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1jLFFBQVEsR0FBR2QsT0FBTyxDQUFDLE1BQUQsQ0FBeEI7O0FBQ0EsSUFBTWUsQ0FBQyxHQUFHZixPQUFPLENBQUMsUUFBRCxDQUFqQjs7QUFFQSxJQUFNZ0IsWUFBWSxHQUFHaEIsT0FBTyxDQUFDLDBCQUFELENBQTVCOztBQUVBLElBQU1pQixHQUFHLEdBQUdiLE9BQU8sQ0FBQ0MsR0FB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ZWFtcGFjdC9kb2N1c2F1cnVzL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliLyIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKiBnZW5lcmF0ZSB0aGUgaTE4bi9lbi5qc29uIGZpbGUgKi9cblxucmVxdWlyZSgnQGJhYmVsL3JlZ2lzdGVyJykoe1xuICBiYWJlbHJjOiBmYWxzZSxcbiAgb25seTogW19fZGlybmFtZSwgYCR7cHJvY2Vzcy5jd2QoKX0vY29yZWBdLFxuICBwbHVnaW5zOiBbXG4gICAgcmVxdWlyZSgnLi9zZXJ2ZXIvdHJhbnNsYXRlLXBsdWdpbi5qcycpLFxuICAgIHJlcXVpcmUoJ0BiYWJlbC9wbHVnaW4tcHJvcG9zYWwtY2xhc3MtcHJvcGVydGllcycpLmRlZmF1bHQsXG4gICAgcmVxdWlyZSgnQGJhYmVsL3BsdWdpbi1wcm9wb3NhbC1vYmplY3QtcmVzdC1zcHJlYWQnKS5kZWZhdWx0LFxuICBdLFxuICBwcmVzZXRzOiBbXG4gICAgcmVxdWlyZSgnQGJhYmVsL3ByZXNldC1yZWFjdCcpLmRlZmF1bHQsXG4gICAgcmVxdWlyZSgnQGJhYmVsL3ByZXNldC1lbnYnKS5kZWZhdWx0LFxuICBdLFxufSk7XG5cbmNvbnN0IHRyYXZlcnNlID0gcmVxdWlyZSgnQGJhYmVsL3RyYXZlcnNlJykuZGVmYXVsdDtcbmNvbnN0IGJhYnlsb24gPSByZXF1aXJlKCdiYWJ5bG9uJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgbWtkaXJwID0gcmVxdWlyZSgnbWtkaXJwJyk7XG5jb25zdCBub2RlUGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuY29uc3QgcmVhZE1ldGFkYXRhID0gcmVxdWlyZSgnLi9zZXJ2ZXIvcmVhZE1ldGFkYXRhLmpzJyk7XG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBzaXRlQ29uZmlnID0gcmVxdWlyZShgJHtDV0R9L3NpdGVDb25maWcuanNgKTtcbmNvbnN0IHNpZGViYXJzID0gcmVxdWlyZShgJHtDV0R9L3NpZGViYXJzLmpzb25gKTtcblxubGV0IGN1c3RvbVRyYW5zbGF0aW9ucyA9IHtcbiAgJ2xvY2FsaXplZC1zdHJpbmdzJzoge1xuICAgIGRvY3M6IHt9LFxuICAgIGxpbmtzOiB7fSxcbiAgICBjYXRlZ29yaWVzOiB7fSxcbiAgfSxcbiAgJ3BhZ2VzLXN0cmluZ3MnOiB7fSxcbn07XG5pZiAoZnMuZXhpc3RzU3luYyhgJHtDV0R9L2RhdGEvY3VzdG9tLXRyYW5zbGF0aW9uLXN0cmluZ3MuanNvbmApKSB7XG4gIGN1c3RvbVRyYW5zbGF0aW9ucyA9IF8ubWVyZ2UoXG4gICAge30sXG4gICAgSlNPTi5wYXJzZShcbiAgICAgIGZzLnJlYWRGaWxlU3luYyhgJHtDV0R9L2RhdGEvY3VzdG9tLXRyYW5zbGF0aW9uLXN0cmluZ3MuanNvbmAsICd1dGY4JyksXG4gICAgKSxcbiAgICBjdXN0b21UcmFuc2xhdGlvbnMsXG4gICk7XG59XG5cbmZ1bmN0aW9uIHdyaXRlRmlsZUFuZENyZWF0ZUZvbGRlcihmaWxlLCBjb250ZW50KSB7XG4gIG1rZGlycC5zeW5jKGZpbGUucmVwbGFjZShuZXcgUmVnRXhwKCcvW14vXSokJyksICcnKSk7XG4gIGZzLndyaXRlRmlsZVN5bmMoZmlsZSwgY29udGVudCk7XG59XG5cbmZ1bmN0aW9uIGV4ZWN1dGUoKSB7XG4gIGNvbnN0IHRyYW5zbGF0aW9ucyA9IHtcbiAgICAnbG9jYWxpemVkLXN0cmluZ3MnOiB7XG4gICAgICBuZXh0OiAnTmV4dCcsXG4gICAgICBwcmV2aW91czogJ1ByZXZpb3VzJyxcbiAgICAgIHRhZ2xpbmU6IHNpdGVDb25maWcudGFnbGluZSxcbiAgICAgIGRvY3M6IHt9LFxuICAgICAgbGlua3M6IHt9LFxuICAgICAgY2F0ZWdvcmllczoge30sXG4gICAgfSxcbiAgICAncGFnZXMtc3RyaW5ncyc6IHt9LFxuICB9O1xuXG4gIC8vIGxvb2sgdGhyb3VnaCBtYXJrZG93biBoZWFkZXJzIG9mIGRvY3MgZm9yIHRpdGxlcyBhbmQgY2F0ZWdvcmllcyB0byB0cmFuc2xhdGVcbiAgY29uc3QgZG9jc0RpciA9IG5vZGVQYXRoLmpvaW4oQ1dELCAnLi4vJywgcmVhZE1ldGFkYXRhLmdldERvY3NQYXRoKCkpO1xuICBjb25zdCB2ZXJzaW9uZWREb2NzRGlyID0gbm9kZVBhdGguam9pbihDV0QsICd2ZXJzaW9uZWRfZG9jcycpO1xuXG4gIGNvbnN0IHRyYW5zbGF0ZURvYyA9IChmaWxlLCByZWZEaXIpID0+IHtcbiAgICBjb25zdCBleHRlbnNpb24gPSBub2RlUGF0aC5leHRuYW1lKGZpbGUpO1xuICAgIGlmIChleHRlbnNpb24gPT09ICcubWQnIHx8IGV4dGVuc2lvbiA9PT0gJy5tYXJrZG93bicpIHtcbiAgICAgIGxldCByZXM7XG4gICAgICB0cnkge1xuICAgICAgICByZXMgPSByZWFkTWV0YWRhdGEucHJvY2Vzc01ldGFkYXRhKGZpbGUsIHJlZkRpcik7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICAgIH1cbiAgICAgIGlmICghcmVzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1ldGFkYXRhID0gcmVzLm1ldGFkYXRhO1xuICAgICAgY29uc3QgaWQgPSBtZXRhZGF0YS5sb2NhbGl6ZWRfaWQ7XG5cbiAgICAgIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXS5kb2NzW2lkXSA9IHt9O1xuICAgICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLmRvY3NbaWRdLnRpdGxlID0gbWV0YWRhdGEudGl0bGU7XG5cbiAgICAgIGlmIChtZXRhZGF0YS5zaWRlYmFyX2xhYmVsKSB7XG4gICAgICAgIHRyYW5zbGF0aW9uc1snbG9jYWxpemVkLXN0cmluZ3MnXS5kb2NzW2lkXS5zaWRlYmFyX2xhYmVsID1cbiAgICAgICAgICBtZXRhZGF0YS5zaWRlYmFyX2xhYmVsO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgZ2xvYi5zeW5jKGAke2RvY3NEaXJ9LyoqYCkuZm9yRWFjaChmaWxlID0+IHRyYW5zbGF0ZURvYyhmaWxlLCBkb2NzRGlyKSk7XG4gIGdsb2JcbiAgICAuc3luYyhgJHt2ZXJzaW9uZWREb2NzRGlyfS8qKmApXG4gICAgLmZvckVhY2goZmlsZSA9PiB0cmFuc2xhdGVEb2MoZmlsZSwgdmVyc2lvbmVkRG9jc0RpcikpO1xuXG4gIC8vIGxvb2sgdGhyb3VnaCBoZWFkZXIgbGlua3MgZm9yIHRleHQgdG8gdHJhbnNsYXRlXG4gIHNpdGVDb25maWcuaGVhZGVyTGlua3MuZm9yRWFjaChsaW5rID0+IHtcbiAgICBpZiAobGluay5sYWJlbCkge1xuICAgICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLmxpbmtzW2xpbmsubGFiZWxdID0gbGluay5sYWJlbDtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIGZpbmQgc2lkZWJhciBjYXRlZ29yeSB0aXRsZXMgdG8gdHJhbnNsYXRlXG4gIE9iamVjdC5rZXlzKHNpZGViYXJzKS5mb3JFYWNoKHNiID0+IHtcbiAgICBjb25zdCBjYXRlZ29yaWVzID0gc2lkZWJhcnNbc2JdO1xuICAgIE9iamVjdC5rZXlzKGNhdGVnb3JpZXMpLmZvckVhY2goY2F0ZWdvcnkgPT4ge1xuICAgICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLmNhdGVnb3JpZXNbY2F0ZWdvcnldID0gY2F0ZWdvcnk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGdsb2Iuc3luYyhgJHtDV0R9L3ZlcnNpb25lZF9zaWRlYmFycy8qYCkuZm9yRWFjaChmaWxlID0+IHtcbiAgICBpZiAoIWZpbGUuZW5kc1dpdGgoJy1zaWRlYmFycy5qc29uJykpIHtcbiAgICAgIGlmIChmaWxlLmVuZHNXaXRoKCctc2lkZWJhci5qc29uJykpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgIGBTa2lwcGluZyAke2ZpbGV9LiBNYWtlIHN1cmUgeW91ciBzaWRlYmFyIGZpbGVuYW1lcyBmb2xsb3cgdGhpcyBmb3JtYXQ6ICd2ZXJzaW9uLVZFUlNJT04tc2lkZWJhcnMuanNvbicuYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHNpZGViYXJDb250ZW50O1xuICAgIHRyeSB7XG4gICAgICBzaWRlYmFyQ29udGVudCA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGZpbGUsICd1dGY4JykpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYENvdWxkIG5vdCBwYXJzZSAke2ZpbGV9IGludG8ganNvbi4gJHtlfWApO1xuICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHNpZGViYXJDb250ZW50KS5mb3JFYWNoKHNiID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBzaWRlYmFyQ29udGVudFtzYl07XG4gICAgICBPYmplY3Qua2V5cyhjYXRlZ29yaWVzKS5mb3JFYWNoKGNhdGVnb3J5ID0+IHtcbiAgICAgICAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLmNhdGVnb3JpZXNbY2F0ZWdvcnldID0gY2F0ZWdvcnk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy8gZ28gdGhyb3VnaCBwYWdlcyB0byBsb29rIGZvciB0ZXh0IGluc2lkZSB0cmFuc2xhdGUgdGFnc1xuICBnbG9iLnN5bmMoYCR7Q1dEfS9wYWdlcy9lbi8qKmApLmZvckVhY2goZmlsZSA9PiB7XG4gICAgY29uc3QgZXh0ZW5zaW9uID0gbm9kZVBhdGguZXh0bmFtZShmaWxlKTtcbiAgICBpZiAoZXh0ZW5zaW9uID09PSAnLmpzJykge1xuICAgICAgY29uc3QgYXN0ID0gYmFieWxvbi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoZmlsZSwgJ3V0ZjgnKSwge1xuICAgICAgICBwbHVnaW5zOiBbJ2pzeCddLFxuICAgICAgfSk7XG4gICAgICB0cmF2ZXJzZShhc3QsIHtcbiAgICAgICAgZW50ZXIocGF0aCkge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHBhdGgubm9kZS50eXBlID09PSAnSlNYRWxlbWVudCcgJiZcbiAgICAgICAgICAgIHBhdGgubm9kZS5vcGVuaW5nRWxlbWVudC5uYW1lLm5hbWUgPT09ICd0cmFuc2xhdGUnXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBjb25zdCB0ZXh0ID0gcGF0aC5ub2RlLmNoaWxkcmVuWzBdLnZhbHVlXG4gICAgICAgICAgICAgIC50cmltKClcbiAgICAgICAgICAgICAgLnJlcGxhY2UoL1xccysvZywgJyAnKTtcbiAgICAgICAgICAgIGxldCBkZXNjcmlwdGlvbiA9ICdubyBkZXNjcmlwdGlvbiBnaXZlbic7XG4gICAgICAgICAgICBjb25zdCBhdHRyaWJ1dGVzID0gcGF0aC5ub2RlLm9wZW5pbmdFbGVtZW50LmF0dHJpYnV0ZXM7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF0dHJpYnV0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZXNbaV0ubmFtZS5uYW1lID09PSAnZGVzYycpIHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGF0dHJpYnV0ZXNbaV0udmFsdWUudmFsdWU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyYW5zbGF0aW9uc1sncGFnZXMtc3RyaW5ncyddW2Ake3RleHR9fCR7ZGVzY3JpcHRpb259YF0gPSB0ZXh0O1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gTWFudWFsbHkgYWRkICdIZWxwIFRyYW5zbGF0ZScgdG8gZW4uanNvblxuICB0cmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXVtcbiAgICAnSGVscCBUcmFuc2xhdGV8cmVjcnVpdCBjb21tdW5pdHkgdHJhbnNsYXRvcnMgZm9yIHlvdXIgcHJvamVjdCdcbiAgXSA9ICdIZWxwIFRyYW5zbGF0ZSc7XG4gIHRyYW5zbGF0aW9uc1sncGFnZXMtc3RyaW5ncyddW1xuICAgICdFZGl0IHRoaXMgRG9jfHJlY3J1aXRtZW50IG1lc3NhZ2UgYXNraW5nIHRvIGVkaXQgdGhlIGRvYyBzb3VyY2UnXG4gIF0gPSAnRWRpdCc7XG4gIHRyYW5zbGF0aW9uc1sncGFnZXMtc3RyaW5ncyddW1xuICAgICdUcmFuc2xhdGUgdGhpcyBEb2N8cmVjcnVpdG1lbnQgbWVzc2FnZSBhc2tpbmcgdG8gdHJhbnNsYXRlIHRoZSBkb2NzJ1xuICBdID0gJ1RyYW5zbGF0ZSc7XG4gIHRyYW5zbGF0aW9uc1sncGFnZXMtc3RyaW5ncyddID0gT2JqZWN0LmFzc2lnbihcbiAgICB0cmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXSxcbiAgICBjdXN0b21UcmFuc2xhdGlvbnNbJ3BhZ2VzLXN0cmluZ3MnXSxcbiAgKTtcbiAgdHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddID0gXy5tZXJnZShcbiAgICB7fSxcbiAgICB0cmFuc2xhdGlvbnNbJ2xvY2FsaXplZC1zdHJpbmdzJ10sXG4gICAgY3VzdG9tVHJhbnNsYXRpb25zWydsb2NhbGl6ZWQtc3RyaW5ncyddLFxuICApO1xuICB3cml0ZUZpbGVBbmRDcmVhdGVGb2xkZXIoXG4gICAgYCR7Q1dEfS9pMThuL2VuLmpzb25gLFxuICAgIGAke0pTT04uc3RyaW5naWZ5KFxuICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAge1xuICAgICAgICAgIF9jb21tZW50OiAnVGhpcyBmaWxlIGlzIGF1dG8tZ2VuZXJhdGVkIGJ5IHdyaXRlLXRyYW5zbGF0aW9ucy5qcycsXG4gICAgICAgIH0sXG4gICAgICAgIHRyYW5zbGF0aW9ucyxcbiAgICAgICksXG4gICAgICBudWxsLFxuICAgICAgMixcbiAgICApfVxcbmAsXG4gICk7XG59XG5cbmV4ZWN1dGUoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBleGVjdXRlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "write-translations.js"
      ],
      "names": [
        "require",
        "babelrc",
        "only",
        "__dirname",
        "process",
        "cwd",
        "plugins",
        "default",
        "presets",
        "traverse",
        "babylon",
        "fs",
        "glob",
        "mkdirp",
        "nodePath",
        "_",
        "readMetadata",
        "CWD",
        "siteConfig",
        "sidebars",
        "customTranslations",
        "docs",
        "links",
        "categories",
        "existsSync",
        "merge",
        "JSON",
        "parse",
        "readFileSync",
        "writeFileAndCreateFolder",
        "file",
        "content",
        "sync",
        "replace",
        "RegExp",
        "writeFileSync",
        "execute",
        "translations",
        "next",
        "previous",
        "tagline",
        "docsDir",
        "join",
        "getDocsPath",
        "versionedDocsDir",
        "translateDoc",
        "refDir",
        "extension",
        "extname",
        "res",
        "processMetadata",
        "e",
        "console",
        "error",
        "exit",
        "metadata",
        "id",
        "localized_id",
        "title",
        "sidebar_label",
        "forEach",
        "headerLinks",
        "link",
        "label",
        "Object",
        "keys",
        "sb",
        "category",
        "endsWith",
        "warn",
        "sidebarContent",
        "ast",
        "enter",
        "path",
        "node",
        "type",
        "openingElement",
        "name",
        "text",
        "children",
        "value",
        "trim",
        "description",
        "attributes",
        "i",
        "length",
        "assign",
        "stringify",
        "_comment",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA;;;;;;;AAOA;;;AAEAA,OAAO,CAAC,iBAAD,CAAP,CAA2B;AACzBC,EAAAA,OAAO,EAAE,KADgB;AAEzBC,EAAAA,IAAI,EAAE,CAACC,SAAD,YAAeC,OAAO,CAACC,GAAR,EAAf,WAFmB;AAGzBC,EAAAA,OAAO,EAAE,CACPN,OAAO,CAAC,8BAAD,CADA,EAEPA,OAAO,CAAC,yCAAD,CAAP,CAAmDO,OAF5C,EAGPP,OAAO,CAAC,2CAAD,CAAP,CAAqDO,OAH9C,CAHgB;AAQzBC,EAAAA,OAAO,EAAE,CACPR,OAAO,CAAC,qBAAD,CAAP,CAA+BO,OADxB,EAEPP,OAAO,CAAC,mBAAD,CAAP,CAA6BO,OAFtB;AARgB,CAA3B;;AAcA,IAAME,QAAQ,GAAGT,OAAO,CAAC,iBAAD,CAAP,CAA2BO,OAA5C;;AACA,IAAMG,OAAO,GAAGV,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMW,EAAE,GAAGX,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMY,IAAI,GAAGZ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMa,MAAM,GAAGb,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMc,QAAQ,GAAGd,OAAO,CAAC,MAAD,CAAxB;;AACA,IAAMe,CAAC,GAAGf,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAMgB,YAAY,GAAGhB,OAAO,CAAC,0BAAD,CAA5B;;AAEA,IAAMiB,GAAG,GAAGb,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMa,UAAU,GAAGlB,OAAO,WAAIiB,GAAJ,oBAA1B;;AACA,IAAME,QAAQ,GAAGnB,OAAO,WAAIiB,GAAJ,oBAAxB;;AAEA,IAAIG,kBAAkB,GAAG;AACvB,uBAAqB;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,UAAU,EAAE;AAHO,GADE;AAMvB,mBAAiB;AANM,CAAzB;;AAQA,IAAIZ,EAAE,CAACa,UAAH,WAAiBP,GAAjB,2CAAJ,EAAkE;AAChEG,EAAAA,kBAAkB,GAAGL,CAAC,CAACU,KAAF,CACnB,EADmB,EAEnBC,IAAI,CAACC,KAAL,CACEhB,EAAE,CAACiB,YAAH,WAAmBX,GAAnB,4CAA+D,MAA/D,CADF,CAFmB,EAKnBG,kBALmB,CAArB;AAOD;;AAED,SAASS,wBAAT,CAAkCC,IAAlC,EAAwCC,OAAxC,EAAiD;AAC/ClB,EAAAA,MAAM,CAACmB,IAAP,CAAYF,IAAI,CAACG,OAAL,CAAa,IAAIC,MAAJ,CAAW,SAAX,CAAb,EAAoC,EAApC,CAAZ;AACAvB,EAAAA,EAAE,CAACwB,aAAH,CAAiBL,IAAjB,EAAuBC,OAAvB;AACD;;AAED,SAASK,OAAT,GAAmB;AACjB,MAAMC,YAAY,GAAG;AACnB,yBAAqB;AACnBC,MAAAA,IAAI,EAAE,MADa;AAEnBC,MAAAA,QAAQ,EAAE,UAFS;AAGnBC,MAAAA,OAAO,EAAEtB,UAAU,CAACsB,OAHD;AAInBnB,MAAAA,IAAI,EAAE,EAJa;AAKnBC,MAAAA,KAAK,EAAE,EALY;AAMnBC,MAAAA,UAAU,EAAE;AANO,KADF;AASnB,qBAAiB;AATE,GAArB,CADiB,CAajB;;AACA,MAAMkB,OAAO,GAAG3B,QAAQ,CAAC4B,IAAT,CAAczB,GAAd,EAAmB,KAAnB,EAA0BD,YAAY,CAAC2B,WAAb,EAA1B,CAAhB;AACA,MAAMC,gBAAgB,GAAG9B,QAAQ,CAAC4B,IAAT,CAAczB,GAAd,EAAmB,gBAAnB,CAAzB;;AAEA,MAAM4B,YAAY,GAAG,SAAfA,YAAe,CAACf,IAAD,EAAOgB,MAAP,EAAkB;AACrC,QAAMC,SAAS,GAAGjC,QAAQ,CAACkC,OAAT,CAAiBlB,IAAjB,CAAlB;;AACA,QAAIiB,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAK,WAAzC,EAAsD;AACpD,UAAIE,GAAJ;;AACA,UAAI;AACFA,QAAAA,GAAG,GAAGjC,YAAY,CAACkC,eAAb,CAA6BpB,IAA7B,EAAmCgB,MAAnC,CAAN;AACD,OAFD,CAEE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA/C,QAAAA,OAAO,CAACkD,IAAR,CAAa,CAAb;AACD;;AACD,UAAI,CAACL,GAAL,EAAU;AACR;AACD;;AACD,UAAMM,QAAQ,GAAGN,GAAG,CAACM,QAArB;AACA,UAAMC,EAAE,GAAGD,QAAQ,CAACE,YAApB;AAEApB,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkChB,IAAlC,CAAuCmC,EAAvC,IAA6C,EAA7C;AACAnB,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkChB,IAAlC,CAAuCmC,EAAvC,EAA2CE,KAA3C,GAAmDH,QAAQ,CAACG,KAA5D;;AAEA,UAAIH,QAAQ,CAACI,aAAb,EAA4B;AAC1BtB,QAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkChB,IAAlC,CAAuCmC,EAAvC,EAA2CG,aAA3C,GACEJ,QAAQ,CAACI,aADX;AAED;AACF;AACF,GAxBD;;AAyBA/C,EAAAA,IAAI,CAACoB,IAAL,WAAaS,OAAb,UAA2BmB,OAA3B,CAAmC,UAAA9B,IAAI;AAAA,WAAIe,YAAY,CAACf,IAAD,EAAOW,OAAP,CAAhB;AAAA,GAAvC;AACA7B,EAAAA,IAAI,CACDoB,IADH,WACWY,gBADX,UAEGgB,OAFH,CAEW,UAAA9B,IAAI;AAAA,WAAIe,YAAY,CAACf,IAAD,EAAOc,gBAAP,CAAhB;AAAA,GAFf,EA3CiB,CA+CjB;;AACA1B,EAAAA,UAAU,CAAC2C,WAAX,CAAuBD,OAAvB,CAA+B,UAAAE,IAAI,EAAI;AACrC,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACd1B,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCf,KAAlC,CAAwCwC,IAAI,CAACC,KAA7C,IAAsDD,IAAI,CAACC,KAA3D;AACD;AACF,GAJD,EAhDiB,CAsDjB;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAY9C,QAAZ,EAAsByC,OAAtB,CAA8B,UAAAM,EAAE,EAAI;AAClC,QAAM3C,UAAU,GAAGJ,QAAQ,CAAC+C,EAAD,CAA3B;AACAF,IAAAA,MAAM,CAACC,IAAP,CAAY1C,UAAZ,EAAwBqC,OAAxB,CAAgC,UAAAO,QAAQ,EAAI;AAC1C9B,MAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCd,UAAlC,CAA6C4C,QAA7C,IAAyDA,QAAzD;AACD,KAFD;AAGD,GALD;AAOAvD,EAAAA,IAAI,CAACoB,IAAL,WAAaf,GAAb,4BAAyC2C,OAAzC,CAAiD,UAAA9B,IAAI,EAAI;AACvD,QAAI,CAACA,IAAI,CAACsC,QAAL,CAAc,gBAAd,CAAL,EAAsC;AACpC,UAAItC,IAAI,CAACsC,QAAL,CAAc,eAAd,CAAJ,EAAoC;AAClChB,QAAAA,OAAO,CAACiB,IAAR,oBACcvC,IADd;AAGD;;AACD;AACD;;AACD,QAAIwC,cAAJ;;AACA,QAAI;AACFA,MAAAA,cAAc,GAAG5C,IAAI,CAACC,KAAL,CAAWhB,EAAE,CAACiB,YAAH,CAAgBE,IAAhB,EAAsB,MAAtB,CAAX,CAAjB;AACD,KAFD,CAEE,OAAOqB,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,2BAAiCvB,IAAjC,yBAAoDqB,CAApD;AACA/C,MAAAA,OAAO,CAACkD,IAAR,CAAa,CAAb;AACD;;AAEDU,IAAAA,MAAM,CAACC,IAAP,CAAYK,cAAZ,EAA4BV,OAA5B,CAAoC,UAAAM,EAAE,EAAI;AACxC,UAAM3C,UAAU,GAAG+C,cAAc,CAACJ,EAAD,CAAjC;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAY1C,UAAZ,EAAwBqC,OAAxB,CAAgC,UAAAO,QAAQ,EAAI;AAC1C9B,QAAAA,YAAY,CAAC,mBAAD,CAAZ,CAAkCd,UAAlC,CAA6C4C,QAA7C,IAAyDA,QAAzD;AACD,OAFD;AAGD,KALD;AAMD,GAvBD,EA9DiB,CAuFjB;;AACAvD,EAAAA,IAAI,CAACoB,IAAL,WAAaf,GAAb,mBAAgC2C,OAAhC,CAAwC,UAAA9B,IAAI,EAAI;AAC9C,QAAMiB,SAAS,GAAGjC,QAAQ,CAACkC,OAAT,CAAiBlB,IAAjB,CAAlB;;AACA,QAAIiB,SAAS,KAAK,KAAlB,EAAyB;AACvB,UAAMwB,GAAG,GAAG7D,OAAO,CAACiB,KAAR,CAAchB,EAAE,CAACiB,YAAH,CAAgBE,IAAhB,EAAsB,MAAtB,CAAd,EAA6C;AACvDxB,QAAAA,OAAO,EAAE,CAAC,KAAD;AAD8C,OAA7C,CAAZ;AAGAG,MAAAA,QAAQ,CAAC8D,GAAD,EAAM;AACZC,QAAAA,KADY,iBACNC,IADM,EACA;AACV,cACEA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmB,YAAnB,IACAF,IAAI,CAACC,IAAL,CAAUE,cAAV,CAAyBC,IAAzB,CAA8BA,IAA9B,KAAuC,WAFzC,EAGE;AACA,gBAAMC,IAAI,GAAGL,IAAI,CAACC,IAAL,CAAUK,QAAV,CAAmB,CAAnB,EAAsBC,KAAtB,CACVC,IADU,GAEVhD,OAFU,CAEF,MAFE,EAEM,GAFN,CAAb;AAGA,gBAAIiD,WAAW,GAAG,sBAAlB;AACA,gBAAMC,UAAU,GAAGV,IAAI,CAACC,IAAL,CAAUE,cAAV,CAAyBO,UAA5C;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,kBAAID,UAAU,CAACC,CAAD,CAAV,CAAcP,IAAd,CAAmBA,IAAnB,KAA4B,MAAhC,EAAwC;AACtCK,gBAAAA,WAAW,GAAGC,UAAU,CAACC,CAAD,CAAV,CAAcJ,KAAd,CAAoBA,KAAlC;AACD;AACF;;AACD3C,YAAAA,YAAY,CAAC,eAAD,CAAZ,WAAiCyC,IAAjC,cAAyCI,WAAzC,KAA0DJ,IAA1D;AACD;AACF;AAlBW,OAAN,CAAR;AAoBD;AACF,GA3BD,EAxFiB,CAqHjB;;AACAzC,EAAAA,YAAY,CAAC,eAAD,CAAZ,CACE,+DADF,IAEI,gBAFJ;AAGAA,EAAAA,YAAY,CAAC,eAAD,CAAZ,CACE,iEADF,IAEI,MAFJ;AAGAA,EAAAA,YAAY,CAAC,eAAD,CAAZ,CACE,qEADF,IAEI,WAFJ;AAGAA,EAAAA,YAAY,CAAC,eAAD,CAAZ,GAAgC2B,MAAM,CAACsB,MAAP,CAC9BjD,YAAY,CAAC,eAAD,CADkB,EAE9BjB,kBAAkB,CAAC,eAAD,CAFY,CAAhC;AAIAiB,EAAAA,YAAY,CAAC,mBAAD,CAAZ,GAAoCtB,CAAC,CAACU,KAAF,CAClC,EADkC,EAElCY,YAAY,CAAC,mBAAD,CAFsB,EAGlCjB,kBAAkB,CAAC,mBAAD,CAHgB,CAApC;AAKAS,EAAAA,wBAAwB,WACnBZ,GADmB,8BAEnBS,IAAI,CAAC6D,SAAL,CACDvB,MAAM,CAACsB,MAAP,CACE;AACEE,IAAAA,QAAQ,EAAE;AADZ,GADF,EAIEnD,YAJF,CADC,EAOD,IAPC,EAQD,CARC,CAFmB,QAAxB;AAaD;;AAEDD,OAAO;AAEPqD,MAAM,CAACC,OAAP,GAAiBtD,OAAjB",
      "sourceRoot": "/home/pdcamargo/workspace/dreampact/docusaurus/website/node_modules/docusaurus/lib/",
      "sourcesContent": [
        "#!/usr/bin/env node\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, `${process.cwd()}/core`],\n  plugins: [\n    require('./server/translate-plugin.js'),\n    require('@babel/plugin-proposal-class-properties').default,\n    require('@babel/plugin-proposal-object-rest-spread').default,\n  ],\n  presets: [\n    require('@babel/preset-react').default,\n    require('@babel/preset-env').default,\n  ],\n});\n\nconst traverse = require('@babel/traverse').default;\nconst babylon = require('babylon');\nconst fs = require('fs-extra');\nconst glob = require('glob');\nconst mkdirp = require('mkdirp');\nconst nodePath = require('path');\nconst _ = require('lodash');\n\nconst readMetadata = require('./server/readMetadata.js');\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst sidebars = require(`${CWD}/sidebars.json`);\n\nlet customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {},\n  },\n  'pages-strings': {},\n};\nif (fs.existsSync(`${CWD}/data/custom-translation-strings.json`)) {\n  customTranslations = _.merge(\n    {},\n    JSON.parse(\n      fs.readFileSync(`${CWD}/data/custom-translation-strings.json`, 'utf8'),\n    ),\n    customTranslations,\n  );\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  const translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {},\n    },\n    'pages-strings': {},\n  };\n\n  // look through markdown headers of docs for titles and categories to translate\n  const docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  const versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  const translateDoc = (file, refDir) => {\n    const extension = nodePath.extname(file);\n    if (extension === '.md' || extension === '.markdown') {\n      let res;\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n      if (!res) {\n        return;\n      }\n      const metadata = res.metadata;\n      const id = metadata.localized_id;\n\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label =\n          metadata.sidebar_label;\n      }\n    }\n  };\n  glob.sync(`${docsDir}/**`).forEach(file => translateDoc(file, docsDir));\n  glob\n    .sync(`${versionedDocsDir}/**`)\n    .forEach(file => translateDoc(file, versionedDocsDir));\n\n  // look through header links for text to translate\n  siteConfig.headerLinks.forEach(link => {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  });\n\n  // find sidebar category titles to translate\n  Object.keys(sidebars).forEach(sb => {\n    const categories = sidebars[sb];\n    Object.keys(categories).forEach(category => {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n\n  glob.sync(`${CWD}/versioned_sidebars/*`).forEach(file => {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\n          `Skipping ${file}. Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.`,\n        );\n      }\n      return;\n    }\n    let sidebarContent;\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(`Could not parse ${file} into json. ${e}`);\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach(sb => {\n      const categories = sidebarContent[sb];\n      Object.keys(categories).forEach(category => {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  });\n\n  // go through pages to look for text inside translate tags\n  glob.sync(`${CWD}/pages/en/**`).forEach(file => {\n    const extension = nodePath.extname(file);\n    if (extension === '.js') {\n      const ast = babylon.parse(fs.readFileSync(file, 'utf8'), {\n        plugins: ['jsx'],\n      });\n      traverse(ast, {\n        enter(path) {\n          if (\n            path.node.type === 'JSXElement' &&\n            path.node.openingElement.name.name === 'translate'\n          ) {\n            const text = path.node.children[0].value\n              .trim()\n              .replace(/\\s+/g, ' ');\n            let description = 'no description given';\n            const attributes = path.node.openingElement.attributes;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n            translations['pages-strings'][`${text}|${description}`] = text;\n          }\n        },\n      });\n    }\n  });\n\n  // Manually add 'Help Translate' to en.json\n  translations['pages-strings'][\n    'Help Translate|recruit community translators for your project'\n  ] = 'Help Translate';\n  translations['pages-strings'][\n    'Edit this Doc|recruitment message asking to edit the doc source'\n  ] = 'Edit';\n  translations['pages-strings'][\n    'Translate this Doc|recruitment message asking to translate the docs'\n  ] = 'Translate';\n  translations['pages-strings'] = Object.assign(\n    translations['pages-strings'],\n    customTranslations['pages-strings'],\n  );\n  translations['localized-strings'] = _.merge(\n    {},\n    translations['localized-strings'],\n    customTranslations['localized-strings'],\n  );\n  writeFileAndCreateFolder(\n    `${CWD}/i18n/en.json`,\n    `${JSON.stringify(\n      Object.assign(\n        {\n          _comment: 'This file is auto-generated by write-translations.js',\n        },\n        translations,\n      ),\n      null,\n      2,\n    )}\\n`,\n  );\n}\n\nexecute();\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585258953642
  }
}